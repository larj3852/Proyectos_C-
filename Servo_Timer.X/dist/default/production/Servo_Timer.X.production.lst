

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 13:35:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131                           
   132                           	psect	idataCOMMON
   133  00E0                     __pidataCOMMON:	
   134                           
   135                           ;initializer for _periodo
   136  00E0  34C8               	retlw	200
   137  00E1  3400               	retlw	0
   138                           
   139                           	psect	idataBANK0
   140  00E2                     __pidataBANK0:	
   141                           ;initializer for _duty
   142                           
   143  00E2  340A               	retlw	10
   144  00E3  3400               	retlw	0
   145                           
   146                           	psect	nvCOMMON
   147  0075                     __pnvCOMMON:	
   148  0075                     _i:	
   149  0075                     	ds	2
   150  0008                     _PORTD	set	8
   151  0001                     _TMR0	set	1
   152  001A                     _RCREG	set	26
   153  0019                     _TXREG	set	25
   154  005D                     _T0IE	set	93
   155  0040                     _RD0	set	64
   156  005A                     _T0IF	set	90
   157  005E                     _PEIE	set	94
   158  005F                     _GIE	set	95
   159  00C4                     _CREN	set	196
   160  00C7                     _SPEN	set	199
   161  0088                     _TRISD	set	136
   162  008F                     _OSCCON	set	143
   163  0099                     _SPBRG	set	153
   164  0408                     _PS0	set	1032
   165  0409                     _PS1	set	1033
   166  040A                     _PS2	set	1034
   167  040B                     _PSA	set	1035
   168  040C                     _T0SE	set	1036
   169  040D                     _T0CS	set	1037
   170  04C1                     _TRMT	set	1217
   171  0465                     _RCIE	set	1125
   172  04C5                     _TXEN	set	1221
   173  04C4                     _SYNC	set	1220
   174  0189                     _ANSELH	set	393
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0015                     start_initialization:	
   180  0015                     __initialization:	
   181                           
   182                           ; Initialize objects allocated to BANK0
   183  0015  120A  118A  20E2  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   184  001A  00A0               	movwf	__pdataBANK0& (0+127)
   185  001B  120A  118A  20E3  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   186  0020  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   187                           
   188                           ; Initialize objects allocated to COMMON
   189  0021  120A  118A  20E0  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   190  0026  00F9               	movwf	__pdataCOMMON& (0+127)
   191  0027  120A  118A  20E1   	fcall	__pidataCOMMON+1	;fetch initializer
   192  002A  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   193                           
   194                           ; Clear objects allocated to COMMON
   195  002B  01F7               	clrf	__pbssCOMMON& (0+127)
   196  002C  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   197  002D                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200  002D                     __end_of__initialization:	
   201  002D  0183               	clrf	3
   202  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMMON
   205  0077                     __pbssCOMMON:	
   206  0077                     _cont:	
   207  0077                     	ds	2
   208                           
   209                           	psect	dataCOMMON
   210  0079                     __pdataCOMMON:	
   211  0079                     _periodo:	
   212  0079                     	ds	2
   213                           
   214                           	psect	dataBANK0
   215  0020                     __pdataBANK0:	
   216  0020                     _duty:	
   217  0020                     	ds	2
   218                           
   219                           	psect	cstackCOMMON
   220  0070                     __pcstackCOMMON:	
   221  0070                     ?_setup:	
   222  0070                     ?_isr:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ??_isr:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233  0070                     	ds	5
   234                           
   235                           	psect	cstackBANK0
   236  0022                     __pcstackBANK0:	
   237  0022                     ??_setup:	
   238  0022                     ??_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0022                     	ds	2
   244                           
   245                           	psect	maintext
   246  0031                     __pmaintext:	
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 53 in file "main_Servo.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : B00/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   266 ;;      Params:         0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0
   268 ;;      Temps:          0       2       0       0       0
   269 ;;      Totals:         0       2       0       0       0
   270 ;;Total ram usage:        2 bytes
   271 ;; Hardware stack levels required when called:    2
   272 ;; This function calls:
   273 ;;		_setup
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           
   280                           ;psect for function _main
   281  0031                     _main:	
   282                           
   283                           ;main_Servo.c: 54: setup();
   284                           
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   287  0031  120A  118A  20C6  120A  118A  	fcall	_setup
   288  0036                     l742:	
   289                           ;main_Servo.c: 55: while(1){
   290                           
   291                           
   292                           ;main_Servo.c: 56: for(i=10;i<=15;i++){
   293  0036  300A               	movlw	10
   294  0037  00F5               	movwf	_i
   295  0038  3000               	movlw	0
   296  0039  00F6               	movwf	_i+1
   297  003A  0876               	movf	_i+1,w
   298  003B  3A80               	xorlw	128
   299  003C  00FF               	movwf	127
   300  003D  3080               	movlw	128
   301  003E  027F               	subwf	127,w
   302  003F  1D03               	skipz
   303  0040  2843               	goto	u185
   304  0041  3010               	movlw	16
   305  0042  0275               	subwf	_i,w
   306  0043                     u185:	
   307  0043  1803               	btfsc	3,0
   308  0044  2866               	goto	l752
   309  0045                     l748:	
   310                           
   311                           ;main_Servo.c: 57: duty=i;
   312  0045  0876               	movf	_i+1,w
   313  0046  1283               	bcf	3,5	;RP0=0, select bank0
   314  0047  1303               	bcf	3,6	;RP1=0, select bank0
   315  0048  00A1               	movwf	_duty+1
   316  0049  0875               	movf	_i,w
   317  004A  00A0               	movwf	_duty
   318                           
   319                           ;main_Servo.c: 58: _delay((unsigned long)((50)*(8000000/4000)));
   320  004B  3082               	movlw	130
   321  004C  1283               	bcf	3,5	;RP0=0, select bank0
   322  004D  1303               	bcf	3,6	;RP1=0, select bank0
   323  004E  00A3               	movwf	??_main+1
   324  004F  30DD               	movlw	221
   325  0050  00A2               	movwf	??_main
   326  0051                     u227:	
   327  0051  0BA2               	decfsz	??_main,f
   328  0052  2851               	goto	u227
   329  0053  0BA3               	decfsz	??_main+1,f
   330  0054  2851               	goto	u227
   331  0055  3001               	movlw	1
   332  0056  07F5               	addwf	_i,f
   333  0057  1803               	skipnc
   334  0058  0AF6               	incf	_i+1,f
   335  0059  3000               	movlw	0
   336  005A  07F6               	addwf	_i+1,f
   337  005B  0876               	movf	_i+1,w
   338  005C  3A80               	xorlw	128
   339  005D  00FF               	movwf	127
   340  005E  3080               	movlw	128
   341  005F  027F               	subwf	127,w
   342  0060  1D03               	skipz
   343  0061  2864               	goto	u195
   344  0062  3010               	movlw	16
   345  0063  0275               	subwf	_i,w
   346  0064                     u195:	
   347  0064  1C03               	skipc
   348  0065  2845               	goto	l748
   349  0066                     l752:	
   350                           
   351                           ;main_Servo.c: 59: }
   352                           ;main_Servo.c: 60: for(i=15;i>=10;i--){
   353  0066  300F               	movlw	15
   354  0067  00F5               	movwf	_i
   355  0068  3000               	movlw	0
   356  0069  00F6               	movwf	_i+1
   357  006A                     L1:	
   358  006A  0876               	movf	_i+1,w
   359  006B  3A80               	xorlw	128
   360  006C  00FF               	movwf	127
   361  006D  3080               	movlw	128
   362  006E  027F               	subwf	127,w
   363  006F  1D03               	skipz
   364  0070  2873               	goto	u205
   365  0071  300A               	movlw	10
   366  0072  0275               	subwf	_i,w
   367  0073                     u205:	
   368  0073  1C03               	btfss	3,0
   369  0074  2836               	goto	l742
   370                           
   371                           ;main_Servo.c: 61: duty=i;
   372  0075  0876               	movf	_i+1,w
   373  0076  1283               	bcf	3,5	;RP0=0, select bank0
   374  0077  1303               	bcf	3,6	;RP1=0, select bank0
   375  0078  00A1               	movwf	_duty+1
   376  0079  0875               	movf	_i,w
   377  007A  00A0               	movwf	_duty
   378                           
   379                           ;main_Servo.c: 62: _delay((unsigned long)((50)*(8000000/4000)));
   380  007B  3082               	movlw	130
   381  007C  1283               	bcf	3,5	;RP0=0, select bank0
   382  007D  1303               	bcf	3,6	;RP1=0, select bank0
   383  007E  00A3               	movwf	??_main+1
   384  007F  30DD               	movlw	221
   385  0080  00A2               	movwf	??_main
   386  0081                     u237:	
   387  0081  0BA2               	decfsz	??_main,f
   388  0082  2881               	goto	u237
   389  0083  0BA3               	decfsz	??_main+1,f
   390  0084  2881               	goto	u237
   391  0085  30FF               	movlw	255
   392  0086  07F5               	addwf	_i,f
   393  0087  1803               	skipnc
   394  0088  0AF6               	incf	_i+1,f
   395  0089  30FF               	movlw	255
   396  008A  07F6               	addwf	_i+1,f
   397  008B  286A               	goto	L1
   398  008C                     __end_of_main:	
   399                           
   400                           	psect	text1
   401  00C6                     __ptext1:	
   402 ;; *************** function _setup *****************
   403 ;; Defined at:
   404 ;;		line 67 in file "main_Servo.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _setup
   434  00C6                     _setup:	
   435                           
   436                           ;main_Servo.c: 69: OSCCON=0B01111000;
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _setup: [wreg+status,2]
   440  00C6  3078               	movlw	120
   441  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   442  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   443  00C9  008F               	movwf	15	;volatile
   444                           
   445                           ;main_Servo.c: 72: PORTD=0;
   446  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   447  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   448  00CC  0188               	clrf	8	;volatile
   449                           
   450                           ;main_Servo.c: 73: ANSELH=0;
   451  00CD  1683               	bsf	3,5	;RP0=1, select bank3
   452  00CE  1703               	bsf	3,6	;RP1=1, select bank3
   453  00CF  0189               	clrf	9	;volatile
   454                           
   455                           ;main_Servo.c: 74: TRISD=0B00000000;
   456  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   457  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   458  00D2  0188               	clrf	8	;volatile
   459                           
   460                           ;main_Servo.c: 76: T0CS=0;
   461  00D3  1281               	bcf	1,5	;volatile
   462                           
   463                           ;main_Servo.c: 77: T0SE=0;
   464  00D4  1201               	bcf	1,4	;volatile
   465                           
   466                           ;main_Servo.c: 78: PSA=1;
   467  00D5  1581               	bsf	1,3	;volatile
   468                           
   469                           ;main_Servo.c: 79: PS2=0;
   470  00D6  1101               	bcf	1,2	;volatile
   471                           
   472                           ;main_Servo.c: 80: PS1=0;
   473  00D7  1081               	bcf	1,1	;volatile
   474                           
   475                           ;main_Servo.c: 81: PS0=0;
   476  00D8  1001               	bcf	1,0	;volatile
   477                           
   478                           ;main_Servo.c: 82: GIE=01;
   479  00D9  178B               	bsf	11,7	;volatile
   480                           
   481                           ;main_Servo.c: 83: T0IE=01;
   482  00DA  168B               	bsf	11,5	;volatile
   483                           
   484                           ;main_Servo.c: 84: TMR0=80;
   485  00DB  3050               	movlw	80
   486  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   487  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   488  00DE  0081               	movwf	1	;volatile
   489  00DF  0008               	return
   490  00E0                     __end_of_setup:	
   491                           
   492                           	psect	text2
   493  008C                     __ptext2:	
   494 ;; *************** function _isr *****************
   495 ;; Defined at:
   496 ;;		line 38 in file "main_Servo.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          5       0       0       0       0
   513 ;;      Totals:         5       0       0       0       0
   514 ;;Total ram usage:        5 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		Interrupt level 1
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _isr
   525  008C                     _isr:	
   526                           
   527                           ;main_Servo.c: 39: if(T0IF==1){
   528  008C  1D0B               	btfss	11,2	;volatile
   529  008D  28B9               	goto	i1l87
   530                           
   531                           ;main_Servo.c: 40: TMR0=55;
   532  008E  3037               	movlw	55
   533  008F  0081               	movwf	1	;volatile
   534                           
   535                           ;main_Servo.c: 41: cont++;
   536  0090  3001               	movlw	1
   537  0091  07F7               	addwf	_cont,f
   538  0092  1803               	skipnc
   539  0093  0AF8               	incf	_cont+1,f
   540  0094  3000               	movlw	0
   541  0095  07F8               	addwf	_cont+1,f
   542                           
   543                           ;main_Servo.c: 42: if(cont>periodo){
   544  0096  087A               	movf	_periodo+1,w
   545  0097  3A80               	xorlw	128
   546  0098  00F0               	movwf	??_isr
   547  0099  0878               	movf	_cont+1,w
   548  009A  3A80               	xorlw	128
   549  009B  0270               	subwf	??_isr,w
   550  009C  1D03               	skipz
   551  009D  28A0               	goto	u12_25
   552  009E  0877               	movf	_cont,w
   553  009F  0279               	subwf	_periodo,w
   554  00A0                     u12_25:	
   555  00A0  1803               	skipnc
   556  00A1  28A7               	goto	i1l688
   557                           
   558                           ;main_Servo.c: 43: RD0=1;
   559  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   560  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   561  00A4  1408               	bsf	8,0	;volatile
   562                           
   563                           ;main_Servo.c: 44: cont=0;
   564  00A5  01F7               	clrf	_cont
   565  00A6  01F8               	clrf	_cont+1
   566  00A7                     i1l688:	
   567                           
   568                           ;main_Servo.c: 45: }
   569                           ;main_Servo.c: 46: if(cont>duty){
   570  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   571  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   572  00A9  0821               	movf	_duty+1,w
   573  00AA  3A80               	xorlw	128
   574  00AB  00F0               	movwf	??_isr
   575  00AC  0878               	movf	_cont+1,w
   576  00AD  3A80               	xorlw	128
   577  00AE  0270               	subwf	??_isr,w
   578  00AF  1D03               	skipz
   579  00B0  28B3               	goto	u13_25
   580  00B1  0877               	movf	_cont,w
   581  00B2  0220               	subwf	_duty,w
   582  00B3                     u13_25:	
   583  00B3  1803               	skipnc
   584  00B4  28B8               	goto	i1l86
   585                           
   586                           ;main_Servo.c: 47: RD0=0;
   587  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   588  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   589  00B7  1008               	bcf	8,0	;volatile
   590  00B8                     i1l86:	
   591                           
   592                           ;main_Servo.c: 48: }
   593                           ;main_Servo.c: 49: T0IF=0;
   594  00B8  110B               	bcf	11,2	;volatile
   595  00B9                     i1l87:	
   596  00B9  0874               	movf	??_isr+4,w
   597  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   598  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   599  00BC  00FF               	movwf	127
   600  00BD  0873               	movf	??_isr+3,w
   601  00BE  008A               	movwf	10
   602  00BF  0872               	movf	??_isr+2,w
   603  00C0  0084               	movwf	4
   604  00C1  0E71               	swapf	(??_isr+1)^(0+-128),w
   605  00C2  0083               	movwf	3
   606  00C3  0EFE               	swapf	126,f
   607  00C4  0E7E               	swapf	126,w
   608  00C5  0009               	retfie
   609  00C6                     __end_of_isr:	
   610  007E                     btemp	set	126	;btemp
   611  007E                     wtemp0	set	126
   612                           
   613                           	psect	intentry
   614  0004                     __pintentry:	
   615                           ;incstack = 0
   616                           ; Regs used in _isr: [wreg+status,2]
   617                           
   618  0004                     interrupt_function:	
   619  007E                     saved_w	set	btemp
   620  0004  00FE               	movwf	btemp
   621  0005  0E03               	swapf	3,w
   622  0006  00F1               	movwf	??_isr+1
   623  0007  0804               	movf	4,w
   624  0008  00F2               	movwf	??_isr+2
   625  0009  080A               	movf	10,w
   626  000A  00F3               	movwf	??_isr+3
   627  000B  1283               	bcf	3,5	;RP0=0, select bank0
   628  000C  1303               	bcf	3,6	;RP1=0, select bank0
   629  000D  087F               	movf	btemp+1,w
   630  000E  00F4               	movwf	??_isr+4
   631  000F  120A  118A  288C   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       4       5        5.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 13:35:43 2018

                       _i 0075               __CFG_CP$OFF 0000                       l742 0036  
                     l752 0066                       l748 0045                       _GIE 005F  
                     _RD0 0040                       u205 0073                       u227 0051  
                     u237 0081                       _PS0 0408                       _PS1 0409  
                     _PS2 040A                       u185 0043              __CFG_CPD$OFF 0000  
                     u195 0064                       _PSA 040B                       _isr 008C  
                     fsr0 0004              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
                    ?_isr 0070                      _T0IE 005D                      _CREN 00C4  
                    _T0IF 005A                      _T0CS 040D                      _T0SE 040C  
                    _PEIE 005E                      _RCIE 0465                      i1l86 00B8  
                    i1l87 00B9                      _TMR0 0001                      _SPEN 00C7  
                    _TRMT 04C1                      _TXEN 04C5                      _SYNC 04C4  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _cont 0077  
                    _main 0031                      _duty 0020                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0012             __CFG_MCLRE$ON 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   i1l688 00A7                     _RCREG 001A                     u12_25 00A0  
                   u13_25 00B3                     _SPBRG 0099                     _PORTD 0008  
                   _TRISD 0088                     _TXREG 0019             __CFG_PWRTE$ON 0000  
                   _setup 00C6                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0015              __end_of_main 008C  
                  ??_main 0022                    ?_setup 0070                    _ANSELH 0189  
                  _OSCCON 008F              __pdataCOMMON 0079                    saved_w 007E  
 __end_of__initialization 002D            __pcstackCOMMON 0070              __pidataBANK0 00E2  
           __end_of_setup 00E0                   ??_setup 0022                __pnvCOMMON 0075  
              __pmaintext 0031                __pintentry 0004                   __ptext1 00C6  
                 __ptext2 008C              __size_of_isr 003A                   _periodo 0079  
    end_of_initialization 002D             __pidataCOMMON 00E0       start_initialization 0015  
             __end_of_isr 00C6  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pdataBANK0 0020  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0022  
          __size_of_setup 001A         interrupt_function 0004         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 005B                  intlevel1 0000  
