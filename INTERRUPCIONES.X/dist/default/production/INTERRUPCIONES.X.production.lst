

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 11:37:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0006                     _PORTB	set	6
   127  0007                     _PORTC	set	7
   128  001A                     _RCREG	set	26
   129  0019                     _TXREG	set	25
   130  005B                     _RBIE	set	91
   131  0033                     _RB3	set	51
   132  0058                     _RBIF	set	88
   133  0037                     _RB7	set	55
   134  0065                     _RCIF	set	101
   135  005E                     _PEIE	set	94
   136  005F                     _GIE	set	95
   137  00C4                     _CREN	set	196
   138  00C7                     _SPEN	set	199
   139  0087                     _TRISC	set	135
   140  0086                     _TRISB	set	134
   141  008F                     _OSCCON	set	143
   142  0099                     _SPBRG	set	153
   143  04B3                     _IOCB3	set	1203
   144  04C1                     _TRMT	set	1217
   145  0465                     _RCIE	set	1125
   146  04C5                     _TXEN	set	1221
   147  04C4                     _SYNC	set	1220
   148  0189                     _ANSELH	set	393
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  0015                     start_initialization:	
   154  0015                     __initialization:	
   155  0015                     end_of_initialization:	
   156                           ;End of C runtime variable initialization code
   157                           
   158  0015                     __end_of__initialization:	
   159  0015  0183               	clrf	3
   160  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   161                           
   162                           	psect	cstackCOMMON
   163  0070                     __pcstackCOMMON:	
   164  0070                     ?_setup:	
   165  0070                     ?_usart_ini:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     ?_usart_read:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ??_usart_read:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_isr:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ??_isr:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?_main:	
   181                           ; 1 bytes @ 0x0
   182                           
   183                           
   184                           ; 1 bytes @ 0x0
   185  0070                     	ds	4
   186  0074                     ??_setup:	
   187  0074                     ??_usart_ini:	
   188                           ; 1 bytes @ 0x4
   189                           
   190  0074                     ??_main:	
   191                           ; 1 bytes @ 0x4
   192                           
   193                           
   194                           ; 1 bytes @ 0x4
   195  0074                     	ds	3
   196                           
   197                           	psect	maintext
   198  0019                     __pmaintext:	
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 53 in file "main_Interrupcion.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, pclath, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : B00/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   218 ;;      Params:         0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0
   220 ;;      Temps:          3       0       0       0       0
   221 ;;      Totals:         3       0       0       0       0
   222 ;;Total ram usage:        3 bytes
   223 ;; Hardware stack levels required when called:    3
   224 ;; This function calls:
   225 ;;		_setup
   226 ;;		_usart_ini
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           
   233                           ;psect for function _main
   234  0019                     _main:	
   235                           
   236                           ;main_Interrupcion.c: 54: setup();
   237                           
   238                           ;incstack = 0
   239                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   240  0019  120A  118A  2098  120A  118A  	fcall	_setup
   241                           
   242                           ;main_Interrupcion.c: 55: usart_ini();
   243  001E  120A  118A  2084  120A  118A  	fcall	_usart_ini
   244  0023                     l619:	
   245                           ;main_Interrupcion.c: 56: while(1){
   246                           
   247                           
   248                           ;main_Interrupcion.c: 58: PORTC=0B001;
   249  0023  3001               	movlw	1
   250  0024  1283               	bcf	3,5	;RP0=0, select bank0
   251  0025  1303               	bcf	3,6	;RP1=0, select bank0
   252  0026  0087               	movwf	7	;volatile
   253                           
   254                           ;main_Interrupcion.c: 59: _delay((unsigned long)((1000)*(8000000/4000)));
   255  0027  300B               	movlw	11
   256  0028  00F6               	movwf	??_main+2
   257  0029  3026               	movlw	38
   258  002A  00F5               	movwf	??_main+1
   259  002B  305D               	movlw	93
   260  002C  00F4               	movwf	??_main
   261  002D                     u107:	
   262  002D  0BF4               	decfsz	??_main,f
   263  002E  282D               	goto	u107
   264  002F  0BF5               	decfsz	??_main+1,f
   265  0030  282D               	goto	u107
   266  0031  0BF6               	decfsz	??_main+2,f
   267  0032  282D               	goto	u107
   268  0033  2834               	nop2
   269                           
   270                           ;main_Interrupcion.c: 60: PORTC=0B010;
   271  0034  3002               	movlw	2
   272  0035  1283               	bcf	3,5	;RP0=0, select bank0
   273  0036  1303               	bcf	3,6	;RP1=0, select bank0
   274  0037  0087               	movwf	7	;volatile
   275                           
   276                           ;main_Interrupcion.c: 61: _delay((unsigned long)((1000)*(8000000/4000)));
   277  0038  300B               	movlw	11
   278  0039  00F6               	movwf	??_main+2
   279  003A  3026               	movlw	38
   280  003B  00F5               	movwf	??_main+1
   281  003C  305D               	movlw	93
   282  003D  00F4               	movwf	??_main
   283  003E                     u117:	
   284  003E  0BF4               	decfsz	??_main,f
   285  003F  283E               	goto	u117
   286  0040  0BF5               	decfsz	??_main+1,f
   287  0041  283E               	goto	u117
   288  0042  0BF6               	decfsz	??_main+2,f
   289  0043  283E               	goto	u117
   290  0044  2845               	nop2
   291                           
   292                           ;main_Interrupcion.c: 62: PORTC=0B100;
   293  0045  3004               	movlw	4
   294  0046  1283               	bcf	3,5	;RP0=0, select bank0
   295  0047  1303               	bcf	3,6	;RP1=0, select bank0
   296  0048  0087               	movwf	7	;volatile
   297                           
   298                           ;main_Interrupcion.c: 63: _delay((unsigned long)((1000)*(8000000/4000)));
   299  0049  300B               	movlw	11
   300  004A  00F6               	movwf	??_main+2
   301  004B  3026               	movlw	38
   302  004C  00F5               	movwf	??_main+1
   303  004D  305D               	movlw	93
   304  004E  00F4               	movwf	??_main
   305  004F                     u127:	
   306  004F  0BF4               	decfsz	??_main,f
   307  0050  284F               	goto	u127
   308  0051  0BF5               	decfsz	??_main+1,f
   309  0052  284F               	goto	u127
   310  0053  0BF6               	decfsz	??_main+2,f
   311  0054  284F               	goto	u127
   312  0055  2856               	nop2
   313  0056  2823               	goto	l619
   314  0057                     __end_of_main:	
   315                           
   316                           	psect	text1
   317  0084                     __ptext1:	
   318 ;; *************** function _usart_ini *****************
   319 ;; Defined at:
   320 ;;		line 27 in file "SERIAL.h"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    2
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _usart_ini
   350  0084                     _usart_ini:	
   351                           
   352                           ;SERIAL.h: 29: SPBRG=12;
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _usart_ini: [wreg]
   356  0084  300C               	movlw	12
   357  0085  1683               	bsf	3,5	;RP0=1, select bank1
   358  0086  1303               	bcf	3,6	;RP1=0, select bank1
   359  0087  0099               	movwf	25	;volatile
   360                           
   361                           ;SERIAL.h: 30: SYNC=0;
   362  0088  1218               	bcf	24,4	;volatile
   363                           
   364                           ;SERIAL.h: 31: SPEN=1;
   365  0089  1283               	bcf	3,5	;RP0=0, select bank0
   366  008A  1303               	bcf	3,6	;RP1=0, select bank0
   367  008B  1798               	bsf	24,7	;volatile
   368                           
   369                           ;SERIAL.h: 32: TXEN=1;
   370  008C  1683               	bsf	3,5	;RP0=1, select bank1
   371  008D  1303               	bcf	3,6	;RP1=0, select bank1
   372  008E  1698               	bsf	24,5	;volatile
   373                           
   374                           ;SERIAL.h: 33: CREN=1;
   375  008F  1283               	bcf	3,5	;RP0=0, select bank0
   376  0090  1303               	bcf	3,6	;RP1=0, select bank0
   377  0091  1618               	bsf	24,4	;volatile
   378                           
   379                           ;SERIAL.h: 35: GIE=1;
   380  0092  178B               	bsf	11,7	;volatile
   381                           
   382                           ;SERIAL.h: 36: PEIE=1;
   383  0093  170B               	bsf	11,6	;volatile
   384                           
   385                           ;SERIAL.h: 37: RCIE=1;
   386  0094  1683               	bsf	3,5	;RP0=1, select bank1
   387  0095  1303               	bcf	3,6	;RP1=0, select bank1
   388  0096  168C               	bsf	12,5	;volatile
   389  0097  0008               	return
   390  0098                     __end_of_usart_ini:	
   391                           
   392                           	psect	text2
   393  0098                     __ptext2:	
   394 ;; *************** function _setup *****************
   395 ;; Defined at:
   396 ;;		line 67 in file "main_Interrupcion.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    2
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _setup
   426  0098                     _setup:	
   427                           
   428                           ;main_Interrupcion.c: 69: OSCCON=0B01111000;
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _setup: [wreg+status,2]
   432  0098  3078               	movlw	120
   433  0099  1683               	bsf	3,5	;RP0=1, select bank1
   434  009A  1303               	bcf	3,6	;RP1=0, select bank1
   435  009B  008F               	movwf	15	;volatile
   436                           
   437                           ;main_Interrupcion.c: 72: PORTB=0;
   438  009C  1283               	bcf	3,5	;RP0=0, select bank0
   439  009D  1303               	bcf	3,6	;RP1=0, select bank0
   440  009E  0186               	clrf	6	;volatile
   441                           
   442                           ;main_Interrupcion.c: 73: PORTC=0;
   443  009F  0187               	clrf	7	;volatile
   444                           
   445                           ;main_Interrupcion.c: 74: ANSELH=0;
   446  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   447  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   448  00A2  0189               	clrf	9	;volatile
   449                           
   450                           ;main_Interrupcion.c: 75: TRISB=0B01111111;
   451  00A3  307F               	movlw	127
   452  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   453  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   454  00A6  0086               	movwf	6	;volatile
   455                           
   456                           ;main_Interrupcion.c: 76: TRISC=0B11111000;
   457  00A7  30F8               	movlw	248
   458  00A8  0087               	movwf	7	;volatile
   459                           
   460                           ;main_Interrupcion.c: 77: RBIE=1;
   461  00A9  158B               	bsf	11,3	;volatile
   462                           
   463                           ;main_Interrupcion.c: 78: IOCB3=1;
   464  00AA  1596               	bsf	22,3	;volatile
   465  00AB  0008               	return
   466  00AC                     __end_of_setup:	
   467                           
   468                           	psect	text3
   469  0057                     __ptext3:	
   470 ;; *************** function _isr *****************
   471 ;; Defined at:
   472 ;;		line 36 in file "main_Interrupcion.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, pclath, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          4       0       0       0       0
   489 ;;      Totals:         4       0       0       0       0
   490 ;;Total ram usage:        4 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		_usart_read
   495 ;; This function is called by:
   496 ;;		Interrupt level 1
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _isr
   502  0057                     _isr:	
   503                           
   504                           ;main_Interrupcion.c: 37: if(RCIF==1){
   505  0057  1E8C               	btfss	12,5	;volatile
   506  0058  2872               	goto	i1l72
   507                           
   508                           ;main_Interrupcion.c: 38: if(usart_read()=='1')
   509  0059  120A  118A  20AC  120A  118A  	fcall	_usart_read
   510  005E  3A31               	xorlw	49
   511  005F  1D03               	skipz
   512  0060  2864               	goto	i1l605
   513                           
   514                           ;main_Interrupcion.c: 39: RB7=1;
   515  0061  1283               	bcf	3,5	;RP0=0, select bank0
   516  0062  1303               	bcf	3,6	;RP1=0, select bank0
   517  0063  1786               	bsf	6,7	;volatile
   518  0064                     i1l605:	
   519                           
   520                           ;main_Interrupcion.c: 40: if(usart_read()=='0')
   521  0064  120A  118A  20AC  120A  118A  	fcall	_usart_read
   522  0069  3A30               	xorlw	48
   523  006A  1D03               	skipz
   524  006B  286F               	goto	i1l74
   525                           
   526                           ;main_Interrupcion.c: 41: RB7=0;
   527  006C  1283               	bcf	3,5	;RP0=0, select bank0
   528  006D  1303               	bcf	3,6	;RP1=0, select bank0
   529  006E  1386               	bcf	6,7	;volatile
   530  006F                     i1l74:	
   531                           
   532                           ;main_Interrupcion.c: 42: RCIF=0;
   533  006F  1283               	bcf	3,5	;RP0=0, select bank0
   534  0070  1303               	bcf	3,6	;RP1=0, select bank0
   535  0071  128C               	bcf	12,5	;volatile
   536  0072                     i1l72:	
   537                           
   538                           ;main_Interrupcion.c: 43: }
   539                           ;main_Interrupcion.c: 44: if(RBIF==1){
   540  0072  180B               	btfsc	11,0	;volatile
   541                           
   542                           ;main_Interrupcion.c: 45: if(RB3==1){
   543  0073  1D86               	btfss	6,3	;volatile
   544  0074  2879               	goto	i1l80
   545  0075                     i1l77:	
   546                           ;main_Interrupcion.c: 46: while(RB3==1);
   547                           
   548  0075  1986               	btfsc	6,3	;volatile
   549  0076  2875               	goto	i1l77
   550                           
   551                           ;main_Interrupcion.c: 47: RB7=!RB7;
   552  0077  3080               	movlw	128
   553  0078  0686               	xorwf	6,f
   554  0079                     i1l80:	
   555                           ;main_Interrupcion.c: 48: RBIF==0;
   556                           
   557  0079  0873               	movf	??_isr+3,w
   558  007A  00FF               	movwf	127
   559  007B  0872               	movf	??_isr+2,w
   560  007C  008A               	movwf	10
   561  007D  0871               	movf	??_isr+1,w
   562  007E  0084               	movwf	4
   563  007F  0E70               	swapf	??_isr^(0+-128),w
   564  0080  0083               	movwf	3
   565  0081  0EFE               	swapf	126,f
   566  0082  0E7E               	swapf	126,w
   567  0083  0009               	retfie
   568  0084                     __end_of_isr:	
   569                           
   570                           	psect	intentry
   571  0004                     __pintentry:	
   572                           ;incstack = 0
   573                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   574                           
   575  0004                     interrupt_function:	
   576  007E                     saved_w	set	btemp
   577  0004  00FE               	movwf	btemp
   578  0005  0E03               	swapf	3,w
   579  0006  00F0               	movwf	??_isr
   580  0007  0804               	movf	4,w
   581  0008  00F1               	movwf	??_isr+1
   582  0009  080A               	movf	10,w
   583  000A  00F2               	movwf	??_isr+2
   584  000B  1283               	bcf	3,5	;RP0=0, select bank0
   585  000C  1303               	bcf	3,6	;RP1=0, select bank0
   586  000D  087F               	movf	btemp+1,w
   587  000E  00F3               	movwf	??_isr+3
   588  000F  120A  118A  2857   	ljmp	_isr
   589                           
   590                           	psect	text4
   591  00AC                     __ptext4:	
   592 ;; *************** function _usart_read *****************
   593 ;; Defined at:
   594 ;;		line 54 in file "SERIAL.h"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      unsigned char 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_isr
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _usart_read
   623  00AC                     _usart_read:	
   624                           
   625                           ;SERIAL.h: 56: if(RCREG)
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _usart_read: [wreg+status,2+status,0]
   629  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   630  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   631  00AE  081A               	movf	26,w	;volatile
   632  00AF  1903               	btfsc	3,2
   633  00B0  0008               	return
   634                           
   635                           ;SERIAL.h: 57: return RCREG;
   636  00B1  081A               	movf	26,w	;volatile
   637  00B2  0008               	return
   638  00B3                     __end_of_usart_read:	
   639  007E                     btemp	set	126	;btemp
   640  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
                              _setup
                          _usart_ini
 ---------------------------------------------------------------------------------
 (1) _usart_ini                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                         _usart_read
 ---------------------------------------------------------------------------------
 (3) _usart_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _usart_ini

 _isr (ROOT)
   _usart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 11:37:51 2018

             __CFG_CP$OFF 0000                       l619 0023                       _GIE 005F  
                     _RB3 0033                       _RB7 0037                       u107 002D  
                     u117 003E                       u127 004F              __CFG_CPD$OFF 0000  
                     _isr 0057                       fsr0 0004              __CFG_IESO$ON 0000  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      _CREN 00C4  
                    _PEIE 005E                      _RBIE 005B                      _RBIF 0058  
                    _RCIE 0465                      _RCIF 0065                      i1l80 0079  
                    i1l72 0072                      i1l74 006F                      i1l77 0075  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 0019                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0012             __CFG_MCLRE$ON 0000                     ??_isr 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _IOCB3 04B3  
                   i1l605 0064                     _RCREG 001A                     _SPBRG 0099  
                   _PORTB 0006                     _PORTC 0007                     _TRISB 0086  
                   _TRISC 0087                     _TXREG 0019             __CFG_PWRTE$ON 0000  
                   _setup 0098                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0015              __end_of_main 0057  
                  ??_main 0074                    ?_setup 0070                    _ANSELH 0189  
                  _OSCCON 008F                    saved_w 007E   __end_of__initialization 0015  
          __pcstackCOMMON 0070             __end_of_setup 00AC                   ??_setup 0074  
              __pmaintext 0019                __pintentry 0004        __size_of_usart_ini 0014  
                 __ptext1 0084                   __ptext2 0098                   __ptext3 0057  
                 __ptext4 00AC              __size_of_isr 002D      end_of_initialization 0015  
       __end_of_usart_ini 0098                _usart_read 00AC       start_initialization 0015  
             __end_of_isr 0084  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
             ?_usart_read 0070            __size_of_setup 0014         interrupt_function 0004  
               _usart_ini 0084       __size_of_usart_read 0007                ?_usart_ini 0070  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 003E                  intlevel1 0000  
            ??_usart_read 0070               ??_usart_ini 0074        __end_of_usart_read 00B3  
