

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 21 10:34:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125                           
   126                           	psect	nvCOMMON
   127  0075                     __pnvCOMMON:	
   128  0075                     _contador:	
   129  0075                     	ds	2
   130  0005                     _PORTA	set	5
   131  005F                     _GIE	set	95
   132  0018                     _CARRY	set	24
   133  002F                     _RA7	set	47
   134  0085                     _TRISA	set	133
   135  008F                     _OSCCON	set	143
   136  010C                     _EEDATA	set	268
   137  010D                     _EEADR	set	269
   138  018D                     _EECON2	set	397
   139  018C                     _EECON1	set	396
   140  0188                     _ANSEL	set	392
   141  0C62                     _WREN	set	3170
   142  0C60                     _RD	set	3168
   143  0C61                     _WR	set	3169
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  07FC                     start_initialization:	
   149  07FC                     __initialization:	
   150  07FC                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  07FC                     __end_of__initialization:	
   154  07FC  0183               	clrf	3
   155  07FD  120A  118A  2FAC   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_setup:	
   160  0070                     ??_setup:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_eeprom_read:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ??_eeprom_read:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_eeprom_write:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ?_main:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     eeprom_write@value:	
   176                           ; 1 bytes @ 0x0
   177                           
   178                           
   179                           ; 1 bytes @ 0x0
   180  0070                     	ds	1
   181  0071                     ??_eeprom_write:	
   182  0071                     eeprom_read@addr:	
   183                           ; 1 bytes @ 0x1
   184                           
   185                           
   186                           ; 1 bytes @ 0x1
   187  0071                     	ds	1
   188  0072                     eeprom_write@addr:	
   189                           
   190                           ; 1 bytes @ 0x2
   191  0072                     	ds	1
   192  0073                     ??_main:	
   193                           
   194                           ; 1 bytes @ 0x3
   195  0073                     	ds	2
   196                           
   197                           	psect	maintext
   198  07AC                     __pmaintext:	
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 37 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : B00/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   218 ;;      Params:         0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0
   221 ;;      Totals:         2       0       0       0       0
   222 ;;Total ram usage:        2 bytes
   223 ;; Hardware stack levels required when called:    1
   224 ;; This function calls:
   225 ;;		_eeprom_read
   226 ;;		_eeprom_write
   227 ;;		_setup
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           
   234                           ;psect for function _main
   235  07AC                     _main:	
   236                           
   237                           ;main.c: 38: setup();
   238                           
   239                           ;incstack = 0
   240                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   241  07AC  120A  118A  275C  120A  118A  	fcall	_setup
   242                           
   243                           ;main.c: 39: PORTA = eeprom_read(0);
   244  07B1  3000               	movlw	0
   245  07B2  120A  118A  276B  120A  118A  	fcall	_eeprom_read
   246  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   247  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   248  07B9  0085               	movwf	5	;volatile
   249                           
   250                           ;main.c: 40: contador = eeprom_read(1);
   251  07BA  3001               	movlw	1
   252  07BB  120A  118A  276B  120A  118A  	fcall	_eeprom_read
   253  07C0  00F3               	movwf	??_main
   254  07C1  01F4               	clrf	??_main+1
   255  07C2  0873               	movf	??_main,w
   256  07C3  00F5               	movwf	_contador
   257  07C4  0874               	movf	??_main+1,w
   258  07C5  00F6               	movwf	_contador+1
   259  07C6                     L1:	
   260                           
   261                           ;main.c: 41: if(contador>3){
   262  07C6  0876               	movf	_contador+1,w
   263  07C7  3A80               	xorlw	128
   264  07C8  00FF               	movwf	127
   265  07C9  3080               	movlw	128
   266  07CA  027F               	subwf	127,w
   267  07CB  1D03               	skipz
   268  07CC  2FCF               	goto	u125
   269  07CD  3004               	movlw	4
   270  07CE  0275               	subwf	_contador,w
   271  07CF                     u125:	
   272  07CF  1C03               	skipc
   273  07D0  2FD7               	goto	l620
   274                           
   275                           ;main.c: 42: PORTA=1;
   276  07D1  3001               	movlw	1
   277  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   278  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   279  07D4  0085               	movwf	5	;volatile
   280                           
   281                           ;main.c: 43: contador=0;
   282  07D5  01F5               	clrf	_contador
   283  07D6  01F6               	clrf	_contador+1
   284  07D7                     l620:	
   285                           ;main.c: 44: }
   286                           ;main.c: 45: while(1){
   287                           
   288                           
   289                           ;main.c: 46: if (RA7==1){
   290  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   291  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   292  07D9  1F85               	btfss	5,7	;volatile
   293  07DA  2FD7               	goto	l620
   294  07DB                     l26:	
   295                           ;main.c: 47: while (RA7==1){}
   296                           
   297  07DB  1B85               	btfsc	5,7	;volatile
   298  07DC  2FDB               	goto	l26
   299                           
   300                           ;main.c: 48: PORTA=PORTA<<1;
   301  07DD  0805               	movf	5,w	;volatile
   302  07DE  00F3               	movwf	??_main
   303  07DF  0773               	addwf	??_main,w
   304  07E0  0085               	movwf	5	;volatile
   305                           
   306                           ;main.c: 49: contador++;
   307  07E1  3001               	movlw	1
   308  07E2  07F5               	addwf	_contador,f
   309  07E3  1803               	skipnc
   310  07E4  0AF6               	incf	_contador+1,f
   311  07E5  3000               	movlw	0
   312  07E6  07F6               	addwf	_contador+1,f
   313                           
   314                           ;main.c: 50: eeprom_write(0,PORTA);
   315  07E7  0805               	movf	5,w	;volatile
   316  07E8  00F3               	movwf	??_main
   317  07E9  0873               	movf	??_main,w
   318  07EA  00F0               	movwf	eeprom_write@value
   319  07EB  3000               	movlw	0
   320  07EC  120A  118A  2786  120A  118A  	fcall	_eeprom_write
   321                           
   322                           ;main.c: 51: eeprom_write(1,contador);
   323  07F1  0875               	movf	_contador,w
   324  07F2  00F3               	movwf	??_main
   325  07F3  0873               	movf	??_main,w
   326  07F4  00F0               	movwf	eeprom_write@value
   327  07F5  3001               	movlw	1
   328  07F6  120A  118A  2786  120A  118A  	fcall	_eeprom_write
   329  07FB  2FC6               	goto	L1
   330  07FC                     __end_of_main:	
   331                           ;main.c: 54: contador=0;
   332                           
   333                           ;main.c: 53: PORTA=1;
   334                           
   335                           ;main.c: 52: if(contador>3){
   336                           
   337                           
   338                           	psect	text1
   339  075C                     __ptext1:	
   340 ;; *************** function _setup *****************
   341 ;; Defined at:
   342 ;;		line 61 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _setup
   371  075C                     _setup:	
   372                           
   373                           ;main.c: 63: OSCCON = 0B01111000;
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _setup: [wreg+status,2]
   377  075C  3078               	movlw	120
   378  075D  1683               	bsf	3,5	;RP0=1, select bank1
   379  075E  1303               	bcf	3,6	;RP1=0, select bank1
   380  075F  008F               	movwf	15	;volatile
   381                           
   382                           ;main.c: 64: PORTA=0;
   383  0760  1283               	bcf	3,5	;RP0=0, select bank0
   384  0761  1303               	bcf	3,6	;RP1=0, select bank0
   385  0762  0185               	clrf	5	;volatile
   386                           
   387                           ;main.c: 65: ANSEL=0;
   388  0763  1683               	bsf	3,5	;RP0=1, select bank3
   389  0764  1703               	bsf	3,6	;RP1=1, select bank3
   390  0765  0188               	clrf	8	;volatile
   391                           
   392                           ;main.c: 66: TRISA=0B11110000;
   393  0766  30F0               	movlw	240
   394  0767  1683               	bsf	3,5	;RP0=1, select bank1
   395  0768  1303               	bcf	3,6	;RP1=0, select bank1
   396  0769  0085               	movwf	5	;volatile
   397  076A  0008               	return
   398  076B                     __end_of_setup:	
   399                           
   400                           	psect	text2
   401  0786                     __ptext2:	
   402 ;; *************** function _eeprom_write *****************
   403 ;; Defined at:
   404 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eewrite.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;  addr            1    wreg     unsigned char 
   407 ;;  value           1    0[COMMON] unsigned char 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  addr            1    2[COMMON] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         1       0       0       0       0
   420 ;;      Locals:         1       0       0       0       0
   421 ;;      Temps:          1       0       0       0       0
   422 ;;      Totals:         3       0       0       0       0
   423 ;;Total ram usage:        3 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _eeprom_write
   434  0786                     _eeprom_write:	
   435                           
   436                           ;incstack = 0
   437                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
   438                           ;eeprom_write@addr stored from wreg
   439  0786  00F2               	movwf	eeprom_write@addr
   440  0787                     l70:	
   441  0787  1683               	bsf	3,5	;RP0=1, select bank3
   442  0788  1703               	bsf	3,6	;RP1=1, select bank3
   443  0789  188C               	btfsc	12,1	;volsfr
   444  078A  2F87               	goto	l70
   445  078B  0872               	movf	eeprom_write@addr,w
   446  078C  1283               	bcf	3,5	;RP0=0, select bank2
   447  078D  1703               	bsf	3,6	;RP1=1, select bank2
   448  078E  008D               	movwf	13	;volatile
   449  078F  0870               	movf	eeprom_write@value,w
   450  0790  008C               	movwf	12	;volatile
   451  0791  303F               	movlw	63
   452  0792  00F1               	movwf	??_eeprom_write
   453  0793  0871               	movf	??_eeprom_write,w
   454  0794  1683               	bsf	3,5	;RP0=1, select bank3
   455  0795  1703               	bsf	3,6	;RP1=1, select bank3
   456  0796  058C               	andwf	12,f	;volsfr
   457  0797  1283               	bcf	3,5	;RP0=0, select bank0
   458  0798  1303               	bcf	3,6	;RP1=0, select bank0
   459  0799  1003               	bcf	3,0	;volatile
   460  079A  1B8B               	btfsc	11,7	;volatile
   461  079B  1403               	bsf	3,0	;volatile
   462  079C  138B               	bcf	11,7	;volatile
   463  079D  1683               	bsf	3,5	;RP0=1, select bank3
   464  079E  1703               	bsf	3,6	;RP1=1, select bank3
   465  079F  150C               	bsf	12,2	;volsfr
   466  07A0  3055               	movlw	85
   467  07A1  008D               	movwf	13	;volsfr
   468  07A2  30AA               	movlw	170
   469  07A3  008D               	movwf	13	;volsfr
   470  07A4  148C               	bsf	12,1	;volsfr
   471  07A5  110C               	bcf	12,2	;volsfr
   472  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   473  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   474  07A8  1C03               	btfss	3,0	;volatile
   475  07A9  0008               	return
   476  07AA  178B               	bsf	11,7	;volatile
   477  07AB  0008               	return
   478  07AC                     __end_of_eeprom_write:	
   479                           
   480                           	psect	text3
   481  076B                     __ptext3:	
   482 ;; *************** function _eeprom_read *****************
   483 ;; Defined at:
   484 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeread.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  addr            1    wreg     unsigned char 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  addr            1    1[COMMON] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _eeprom_read
   513  076B                     _eeprom_read:	
   514                           
   515                           ;incstack = 0
   516                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   517                           ;eeprom_read@addr stored from wreg
   518  076B  00F1               	movwf	eeprom_read@addr
   519  076C                     l48:	
   520  076C  0064               	clrwdt	;# 
   521  076D  1683               	bsf	3,5	;RP0=1, select bank3
   522  076E  1703               	bsf	3,6	;RP1=1, select bank3
   523  076F  188C               	btfsc	12,1	;volsfr
   524  0770  2F6C               	goto	l48
   525  0771  0871               	movf	eeprom_read@addr,w
   526  0772  1283               	bcf	3,5	;RP0=0, select bank2
   527  0773  1703               	bsf	3,6	;RP1=1, select bank2
   528  0774  008D               	movwf	13	;volatile
   529  0775  303F               	movlw	63
   530  0776  00F0               	movwf	??_eeprom_read
   531  0777  0870               	movf	??_eeprom_read,w
   532  0778  1683               	bsf	3,5	;RP0=1, select bank3
   533  0779  1703               	bsf	3,6	;RP1=1, select bank3
   534  077A  058C               	andwf	12,f	;volsfr
   535  077B  140C               	bsf	12,0	;volsfr
   536  077C  1003               	clrc
   537  077D  180C               	btfsc	12,0	;volsfr
   538  077E  1403               	setc
   539  077F  3000               	movlw	0
   540  0780  1803               	skipnc
   541  0781  3001               	movlw	1
   542  0782  1283               	bcf	3,5	;RP0=0, select bank2
   543  0783  1703               	bsf	3,6	;RP1=1, select bank2
   544  0784  080C               	movf	12,w	;volatile
   545  0785  0008               	return
   546  0786                     __end_of_eeprom_read:	
   547  007E                     btemp	set	126	;btemp
   548  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_eeprom_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     165
                                              3 COMMON     2     2      0
                        _eeprom_read
                       _eeprom_write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     150
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_read
   _eeprom_write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 21 10:34:50 2018

             __CFG_CP$OFF 0000                        l26 07DB                        l70 0787  
                      l48 076C                        _RD 0C60                        _WR 0C61  
                     l620 07D7                       _GIE 005F                       _RA7 002F  
                     u125 07CF              __CFG_CPD$OFF 0000              __CFG_IESO$ON 0000  
            __CFG_LVP$OFF 0000                      _WREN 0C62            ??_eeprom_write 0071  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 07AC  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0000  
           __CFG_MCLRE$ON 0000                     ?_main 0070                     _EEADR 010D  
           __CFG_WDTE$OFF 0000                     _CARRY 0018                     _ANSEL 0188  
                   _PORTA 0005                     _TRISA 0085             __CFG_PWRTE$ON 0000  
                   _setup 075C                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0073  
                  _EEDATA 010C                    _EECON1 018C                    _EECON2 018D  
                  ?_setup 0070                    _OSCCON 008F      __size_of_eeprom_read 001B  
    __end_of_eeprom_write 07AC   __end_of__initialization 07FC           eeprom_read@addr 0071  
          __pcstackCOMMON 0070             __end_of_setup 076B         eeprom_write@value 0070  
                 ??_setup 0070                __pnvCOMMON 0075                __pmaintext 07AC  
   __size_of_eeprom_write 0026                   __ptext1 075C                   __ptext2 0786  
                 __ptext3 076B      end_of_initialization 07FC              _eeprom_write 0786  
           ??_eeprom_read 0070       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_eeprom_read 0786                 ___latbits 0002          eeprom_write@addr 0072  
          __size_of_setup 000F               _eeprom_read 076B         __CFG_BOR4V$BOR40V 0000  
                _contador 0075             __size_of_main 0050             ?_eeprom_write 0070  
            ?_eeprom_read 0070  
