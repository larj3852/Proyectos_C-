/*
 * File:   main_keyword.c
 * Author: Jesus Lara
 * DESCRIPCION: TECLADO MATRICIAL CON COMUNICACIÓN SERIAL
 * Created on 5 de mayo de 2018, 09:28 AM
 */


//                                  BIBLIOTECAS
#include <xc.h>
#include <stdlib.h>
//                                  BITS DE CONFIGURACIÓN
// PIC16F887 Configuration Bit Settings

// 'C' source line config statements

// CONFIG1
#pragma config FOSC = INTRC_NOCLKOUT// Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = ON       // Power-up Timer Enable bit (PWRT enabled)
#pragma config MCLRE = ON       // RE3/MCLR pin function select bit (RE3/MCLR pin function is MCLR)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = ON       // Brown Out Reset Selection bits (BOR enabled)
#pragma config IESO = ON        // Internal External Switchover bit (Internal/External Switchover mode is enabled)
#pragma config FCMEN = ON       // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is enabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

//                 DECLARACION VARIABLES
#define delay_ms(x) _delay((unsigned long)((x)*(8000000/4000)))
#include "Serial.h"
//                 DECLARACION FUNCIONES
void setup(void);
void key(void);


void main(void) {
    setup();
    usart_ini();
    while(1){
        key();
        delay_ms(250);
    }
}

void setup(void){
    PORTB=0;
    PORTC=0;
    ANSEL=0; //<-Digital
    TRISB=0B00001111;
    TRISC=255;
}
void key (void){
    PORTB=128; //10000000
        if(RB3==1) {usart_write_c('1');}
        if(RB2==1) {usart_write_c('2');}
        if(RB1==1) {usart_write_c('3');}
        if(RB0==1) {usart_write_c('4');}
    PORTB=64; //01000000
        if(RB3==1) {usart_write_c('4');}
        if(RB2==1) {usart_write_c('5');}
        if(RB1==1) {usart_write_c('6');}
        if(RB0==1) {usart_write_c('B');}
    PORTB=32; //00100000
        if(RB3==1) {usart_write_c('7');}
        if(RB2==1) {usart_write_c('8');}
        if(RB1==1) {usart_write_c('9');}
        if(RB0==1) {usart_write_c('C');}
    PORTB=16; //00010000
        if(RB3==1) {usart_write_c('*');}
        if(RB2==1) {usart_write_c('0');}
        if(RB1==1) {usart_write_c('#');}
        if(RB0==1) {usart_write_c('D');}
}
