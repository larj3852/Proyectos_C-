

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 10:27:39 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0007                     _PORTC	set	7
   128  0006                     _PORTB	set	6
   129  001A                     _RCREG	set	26
   130  0019                     _TXREG	set	25
   131  0030                     _RB0	set	48
   132  0031                     _RB1	set	49
   133  0032                     _RB2	set	50
   134  0033                     _RB3	set	51
   135  00C4                     _CREN	set	196
   136  00C7                     _SPEN	set	199
   137  0087                     _TRISC	set	135
   138  0086                     _TRISB	set	134
   139  008F                     _OSCCON	set	143
   140  0099                     _SPBRG	set	153
   141  04C1                     _TRMT	set	1217
   142  04C5                     _TXEN	set	1221
   143  04C4                     _SYNC	set	1220
   144  0189                     _ANSELH	set	393
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  0015                     start_initialization:	
   150  0015                     __initialization:	
   151  0015                     end_of_initialization:	
   152                           ;End of C runtime variable initialization code
   153                           
   154  0015                     __end_of__initialization:	
   155  0015  0183               	clrf	3
   156  0016  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   157                           
   158                           	psect	cstackCOMMON
   159  0070                     __pcstackCOMMON:	
   160  0070                     ?_setup:	
   161  0070                     ?_key:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_usart_ini:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?_usart_write_c:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?_isr:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0070                     ??_isr:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  0070                     ?_main:	
   177                           ; 1 bytes @ 0x0
   178                           
   179                           
   180                           ; 1 bytes @ 0x0
   181  0070                     	ds	4
   182  0074                     ??_setup:	
   183  0074                     ??_usart_ini:	
   184                           ; 1 bytes @ 0x4
   185                           
   186  0074                     ??_usart_write_c:	
   187                           ; 1 bytes @ 0x4
   188                           
   189  0074                     usart_write_c@ch:	
   190                           ; 1 bytes @ 0x4
   191                           
   192                           
   193                           ; 1 bytes @ 0x4
   194  0074                     	ds	1
   195  0075                     ??_key:	
   196  0075                     ??_main:	
   197                           ; 1 bytes @ 0x5
   198                           
   199                           
   200                           ; 1 bytes @ 0x5
   201  0075                     	ds	3
   202                           
   203                           	psect	maintext
   204  00C0                     __pmaintext:	
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 56 in file "main_keyword.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, pclath, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : B00/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0
   226 ;;      Temps:          3       0       0       0       0
   227 ;;      Totals:         3       0       0       0       0
   228 ;;Total ram usage:        3 bytes
   229 ;; Hardware stack levels required when called:    3
   230 ;; This function calls:
   231 ;;		_key
   232 ;;		_setup
   233 ;;		_usart_ini
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           
   240                           ;psect for function _main
   241  00C0                     _main:	
   242                           
   243                           ;main_keyword.c: 58: setup();
   244                           
   245                           ;incstack = 0
   246                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   247  00C0  120A  118A  20DD  120A  118A  	fcall	_setup
   248                           
   249                           ;main_keyword.c: 59: usart_ini();
   250  00C5  120A  118A  20EF  120A  118A  	fcall	_usart_ini
   251  00CA                     l69:	
   252                           ;main_keyword.c: 60: while(1){
   253                           
   254                           
   255                           ;main_keyword.c: 62: key();
   256  00CA  120A  118A  2019  120A  118A  	fcall	_key
   257                           
   258                           ;main_keyword.c: 63: _delay((unsigned long)((250)*(8000000/4000)));
   259  00CF  3003               	movlw	3
   260  00D0  00F7               	movwf	??_main+2
   261  00D1  308A               	movlw	138
   262  00D2  00F6               	movwf	??_main+1
   263  00D3  3055               	movlw	85
   264  00D4  00F5               	movwf	??_main
   265  00D5                     u207:	
   266  00D5  0BF5               	decfsz	??_main,f
   267  00D6  28D5               	goto	u207
   268  00D7  0BF6               	decfsz	??_main+1,f
   269  00D8  28D5               	goto	u207
   270  00D9  0BF7               	decfsz	??_main+2,f
   271  00DA  28D5               	goto	u207
   272  00DB  28DC               	nop2
   273  00DC  28CA               	goto	l69
   274  00DD                     __end_of_main:	
   275                           ;main_keyword.c: 65: }
   276                           ;main_keyword.c: 66: return;
   277                           
   278                           
   279                           	psect	text1
   280  00EF                     __ptext1:	
   281 ;; *************** function _usart_ini *****************
   282 ;; Defined at:
   283 ;;		line 26 in file "Serial.h"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels used:    1
   303 ;; Hardware stack levels required when called:    1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _usart_ini
   313  00EF                     _usart_ini:	
   314                           
   315                           ;Serial.h: 28: SPBRG=12;
   316                           
   317                           ;incstack = 0
   318                           ; Regs used in _usart_ini: [wreg]
   319  00EF  300C               	movlw	12
   320  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   321  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   322  00F2  0099               	movwf	25	;volatile
   323                           
   324                           ;Serial.h: 29: SYNC=0;
   325  00F3  1218               	bcf	24,4	;volatile
   326                           
   327                           ;Serial.h: 30: SPEN=1;
   328  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   329  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   330  00F6  1798               	bsf	24,7	;volatile
   331                           
   332                           ;Serial.h: 31: TXEN=1;
   333  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   334  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   335  00F9  1698               	bsf	24,5	;volatile
   336                           
   337                           ;Serial.h: 32: CREN=1;
   338  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   339  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   340  00FC  1618               	bsf	24,4	;volatile
   341  00FD  0008               	return
   342  00FE                     __end_of_usart_ini:	
   343                           
   344                           	psect	text2
   345  00DD                     __ptext2:	
   346 ;; *************** function _setup *****************
   347 ;; Defined at:
   348 ;;		line 71 in file "main_keyword.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           
   377                           ;psect for function _setup
   378  00DD                     _setup:	
   379                           
   380                           ;main_keyword.c: 73: OSCCON=0B01111000;
   381                           
   382                           ;incstack = 0
   383                           ; Regs used in _setup: [wreg+status,2]
   384  00DD  3078               	movlw	120
   385  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   386  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   387  00E0  008F               	movwf	15	;volatile
   388                           
   389                           ;main_keyword.c: 76: PORTB=0;
   390  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   391  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   392  00E3  0186               	clrf	6	;volatile
   393                           
   394                           ;main_keyword.c: 77: PORTC=0;
   395  00E4  0187               	clrf	7	;volatile
   396                           
   397                           ;main_keyword.c: 78: ANSELH=0;
   398  00E5  1683               	bsf	3,5	;RP0=1, select bank3
   399  00E6  1703               	bsf	3,6	;RP1=1, select bank3
   400  00E7  0189               	clrf	9	;volatile
   401                           
   402                           ;main_keyword.c: 79: TRISB=0B00001111;
   403  00E8  300F               	movlw	15
   404  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   405  00EA  1303               	bcf	3,6	;RP1=0, select bank1
   406  00EB  0086               	movwf	6	;volatile
   407                           
   408                           ;main_keyword.c: 80: TRISC=255;
   409  00EC  30FF               	movlw	255
   410  00ED  0087               	movwf	7	;volatile
   411  00EE  0008               	return
   412  00EF                     __end_of_setup:	
   413                           
   414                           	psect	text3
   415  0019                     __ptext3:	
   416 ;; *************** function _key *****************
   417 ;; Defined at:
   418 ;;		line 83 in file "main_keyword.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         0       0       0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    2
   439 ;; This function calls:
   440 ;;		_usart_write_c
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _key
   448  0019                     _key:	
   449                           
   450                           ;main_keyword.c: 85: PORTB=128;
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _key: [wreg+status,2+status,0+pclath+cstack]
   454  0019  3080               	movlw	128
   455  001A  1283               	bcf	3,5	;RP0=0, select bank0
   456  001B  1303               	bcf	3,6	;RP1=0, select bank0
   457  001C  0086               	movwf	6	;volatile
   458                           
   459                           ;main_keyword.c: 86: if(RB3==1)
   460  001D  1D86               	btfss	6,3	;volatile
   461  001E  2825               	goto	l584
   462                           
   463                           ;main_keyword.c: 87: usart_write_c('1');
   464  001F  3031               	movlw	49
   465  0020  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   466  0025                     l584:	
   467                           
   468                           ;main_keyword.c: 88: if(RB2==1)
   469  0025  1283               	bcf	3,5	;RP0=0, select bank0
   470  0026  1303               	bcf	3,6	;RP1=0, select bank0
   471  0027  1D06               	btfss	6,2	;volatile
   472  0028  282F               	goto	l588
   473                           
   474                           ;main_keyword.c: 89: usart_write_c('2');
   475  0029  3032               	movlw	50
   476  002A  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   477  002F                     l588:	
   478                           
   479                           ;main_keyword.c: 90: if(RB1==1)
   480  002F  1283               	bcf	3,5	;RP0=0, select bank0
   481  0030  1303               	bcf	3,6	;RP1=0, select bank0
   482  0031  1C86               	btfss	6,1	;volatile
   483  0032  2839               	goto	l592
   484                           
   485                           ;main_keyword.c: 91: usart_write_c('3');
   486  0033  3033               	movlw	51
   487  0034  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   488  0039                     l592:	
   489                           
   490                           ;main_keyword.c: 92: if(RB0==1)
   491  0039  1283               	bcf	3,5	;RP0=0, select bank0
   492  003A  1303               	bcf	3,6	;RP1=0, select bank0
   493  003B  1C06               	btfss	6,0	;volatile
   494  003C  2843               	goto	l596
   495                           
   496                           ;main_keyword.c: 93: usart_write_c('A');
   497  003D  3041               	movlw	65
   498  003E  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   499  0043                     l596:	
   500                           
   501                           ;main_keyword.c: 95: PORTB=64;
   502  0043  3040               	movlw	64
   503  0044  1283               	bcf	3,5	;RP0=0, select bank0
   504  0045  1303               	bcf	3,6	;RP1=0, select bank0
   505  0046  0086               	movwf	6	;volatile
   506                           
   507                           ;main_keyword.c: 96: if(RB3==1)
   508  0047  1D86               	btfss	6,3	;volatile
   509  0048  284F               	goto	l602
   510                           
   511                           ;main_keyword.c: 97: usart_write_c('4');
   512  0049  3034               	movlw	52
   513  004A  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   514  004F                     l602:	
   515                           
   516                           ;main_keyword.c: 98: if(RB2==1)
   517  004F  1283               	bcf	3,5	;RP0=0, select bank0
   518  0050  1303               	bcf	3,6	;RP1=0, select bank0
   519  0051  1D06               	btfss	6,2	;volatile
   520  0052  2859               	goto	l606
   521                           
   522                           ;main_keyword.c: 99: usart_write_c('5');
   523  0053  3035               	movlw	53
   524  0054  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   525  0059                     l606:	
   526                           
   527                           ;main_keyword.c: 100: if(RB1==1)
   528  0059  1283               	bcf	3,5	;RP0=0, select bank0
   529  005A  1303               	bcf	3,6	;RP1=0, select bank0
   530  005B  1C86               	btfss	6,1	;volatile
   531  005C  2863               	goto	l610
   532                           
   533                           ;main_keyword.c: 101: usart_write_c('6');
   534  005D  3036               	movlw	54
   535  005E  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   536  0063                     l610:	
   537                           
   538                           ;main_keyword.c: 102: if(RB0==1)
   539  0063  1283               	bcf	3,5	;RP0=0, select bank0
   540  0064  1303               	bcf	3,6	;RP1=0, select bank0
   541  0065  1C06               	btfss	6,0	;volatile
   542  0066  286D               	goto	l614
   543                           
   544                           ;main_keyword.c: 103: usart_write_c('B');
   545  0067  3042               	movlw	66
   546  0068  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   547  006D                     l614:	
   548                           
   549                           ;main_keyword.c: 105: PORTB=32;
   550  006D  3020               	movlw	32
   551  006E  1283               	bcf	3,5	;RP0=0, select bank0
   552  006F  1303               	bcf	3,6	;RP1=0, select bank0
   553  0070  0086               	movwf	6	;volatile
   554                           
   555                           ;main_keyword.c: 106: if(RB3==1)
   556  0071  1D86               	btfss	6,3	;volatile
   557  0072  2879               	goto	l620
   558                           
   559                           ;main_keyword.c: 107: usart_write_c('7');
   560  0073  3037               	movlw	55
   561  0074  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   562  0079                     l620:	
   563                           
   564                           ;main_keyword.c: 108: if(RB2==1)
   565  0079  1283               	bcf	3,5	;RP0=0, select bank0
   566  007A  1303               	bcf	3,6	;RP1=0, select bank0
   567  007B  1D06               	btfss	6,2	;volatile
   568  007C  2883               	goto	l624
   569                           
   570                           ;main_keyword.c: 109: usart_write_c('8');
   571  007D  3038               	movlw	56
   572  007E  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   573  0083                     l624:	
   574                           
   575                           ;main_keyword.c: 110: if(RB1==1)
   576  0083  1283               	bcf	3,5	;RP0=0, select bank0
   577  0084  1303               	bcf	3,6	;RP1=0, select bank0
   578  0085  1C86               	btfss	6,1	;volatile
   579  0086  288D               	goto	l628
   580                           
   581                           ;main_keyword.c: 111: usart_write_c('9');
   582  0087  3039               	movlw	57
   583  0088  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   584  008D                     l628:	
   585                           
   586                           ;main_keyword.c: 112: if(RB0==1)
   587  008D  1283               	bcf	3,5	;RP0=0, select bank0
   588  008E  1303               	bcf	3,6	;RP1=0, select bank0
   589  008F  1C06               	btfss	6,0	;volatile
   590  0090  2897               	goto	l632
   591                           
   592                           ;main_keyword.c: 113: usart_write_c('C');
   593  0091  3043               	movlw	67
   594  0092  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   595  0097                     l632:	
   596                           
   597                           ;main_keyword.c: 115: PORTB=16;
   598  0097  3010               	movlw	16
   599  0098  1283               	bcf	3,5	;RP0=0, select bank0
   600  0099  1303               	bcf	3,6	;RP1=0, select bank0
   601  009A  0086               	movwf	6	;volatile
   602                           
   603                           ;main_keyword.c: 116: if(RB3==1)
   604  009B  1D86               	btfss	6,3	;volatile
   605  009C  28A3               	goto	l638
   606                           
   607                           ;main_keyword.c: 117: usart_write_c('*');
   608  009D  302A               	movlw	42
   609  009E  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   610  00A3                     l638:	
   611                           
   612                           ;main_keyword.c: 118: if(RB2==1)
   613  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   614  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   615  00A5  1D06               	btfss	6,2	;volatile
   616  00A6  28AD               	goto	l642
   617                           
   618                           ;main_keyword.c: 119: usart_write_c('0');
   619  00A7  3030               	movlw	48
   620  00A8  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   621  00AD                     l642:	
   622                           
   623                           ;main_keyword.c: 120: if(RB1==1)
   624  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   625  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   626  00AF  1C86               	btfss	6,1	;volatile
   627  00B0  28B7               	goto	l646
   628                           
   629                           ;main_keyword.c: 121: usart_write_c('#');
   630  00B1  3023               	movlw	35
   631  00B2  120A  118A  2109  120A  118A  	fcall	_usart_write_c
   632  00B7                     l646:	
   633                           
   634                           ;main_keyword.c: 122: if(RB0==1)
   635  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   636  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   637  00B9  1C06               	btfss	6,0	;volatile
   638  00BA  0008               	return
   639                           
   640                           ;main_keyword.c: 123: usart_write_c('D');
   641  00BB  3044               	movlw	68
   642  00BC  120A  118A  2109   	fcall	_usart_write_c
   643  00BF  0008               	return
   644  00C0                     __end_of_key:	
   645                           
   646                           	psect	text4
   647  0109                     __ptext4:	
   648 ;; *************** function _usart_write_c *****************
   649 ;; Defined at:
   650 ;;		line 39 in file "Serial.h"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  ch              1    wreg     unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  ch              1    4[COMMON] unsigned char 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         1       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0
   667 ;;      Totals:         1       0       0       0       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_key
   675 ;;		_usart_write_s
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _usart_write_c
   681  0109                     _usart_write_c:	
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _usart_write_c: [wreg]
   685                           ;usart_write_c@ch stored from wreg
   686  0109  00F4               	movwf	usart_write_c@ch
   687                           
   688                           ;Serial.h: 41: TXREG=ch;
   689  010A  0874               	movf	usart_write_c@ch,w
   690  010B  1283               	bcf	3,5	;RP0=0, select bank0
   691  010C  1303               	bcf	3,6	;RP1=0, select bank0
   692  010D  0099               	movwf	25	;volatile
   693  010E                     l48:	
   694                           ;Serial.h: 42: while(TRMT==0);
   695                           
   696  010E  1683               	bsf	3,5	;RP0=1, select bank1
   697  010F  1303               	bcf	3,6	;RP1=0, select bank1
   698  0110  1898               	btfsc	24,1	;volatile
   699  0111  0008               	return
   700  0112  290E               	goto	l48
   701  0113                     __end_of_usart_write_c:	
   702                           
   703                           	psect	text5
   704  00FE                     __ptext5:	
   705 ;; *************** function _isr *****************
   706 ;; Defined at:
   707 ;;		line 49 in file "main_keyword.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		None
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          4       0       0       0       0
   724 ;;      Totals:         4       0       0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		Interrupt level 1
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _isr
   736  00FE                     _isr:	
   737  00FE  0873               	movf	??_isr+3,w
   738  00FF  00FF               	movwf	127
   739  0100  0872               	movf	??_isr+2,w
   740  0101  008A               	movwf	10
   741  0102  0871               	movf	??_isr+1,w
   742  0103  0084               	movwf	4
   743  0104  0E70               	swapf	??_isr^(0+-128),w
   744  0105  0083               	movwf	3
   745  0106  0EFE               	swapf	126,f
   746  0107  0E7E               	swapf	126,w
   747  0108  0009               	retfie
   748  0109                     __end_of_isr:	
   749  007E                     btemp	set	126	;btemp
   750  007E                     wtemp0	set	126
   751                           
   752                           	psect	intentry
   753  0004                     __pintentry:	
   754                           ;incstack = 0
   755                           ; Regs used in _isr: []
   756                           
   757  0004                     interrupt_function:	
   758  007E                     saved_w	set	btemp
   759  0004  00FE               	movwf	btemp
   760  0005  0E03               	swapf	3,w
   761  0006  00F0               	movwf	??_isr
   762  0007  0804               	movf	4,w
   763  0008  00F1               	movwf	??_isr+1
   764  0009  080A               	movf	10,w
   765  000A  00F2               	movwf	??_isr+2
   766  000B  1283               	bcf	3,5	;RP0=0, select bank0
   767  000C  1303               	bcf	3,6	;RP1=0, select bank0
   768  000D  087F               	movf	btemp+1,w
   769  000E  00F3               	movwf	??_isr+3
   770  000F  120A  118A  28FE   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _key->_usart_write_c

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              5 COMMON     3     3      0
                                _key
                              _setup
                          _usart_ini
 ---------------------------------------------------------------------------------
 (1) _usart_ini                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key                                                  0     0      0      15
                      _usart_write_c
 ---------------------------------------------------------------------------------
 (2) _usart_write_c                                        1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _key
     _usart_write_c
   _setup
   _usart_ini

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 10:27:39 2018

             __CFG_CP$OFF 0000                        l48 010E                        l69 00CA  
                     l610 0063                       l602 004F                       l620 0079  
                     l614 006D                       l606 0059                       l632 0097  
                     l624 0083                       l642 00AD                       l628 008D  
                     l646 00B7                       l638 00A3                       l592 0039  
                     l584 0025                       l596 0043                       l588 002F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       u207 00D5              __CFG_CPD$OFF 0000  
                     _key 0019                       _isr 00FE                       fsr0 0004  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      ?_key 0070  
                    ?_isr 0070                      _CREN 00C4                      _SPEN 00C7  
                    _TRMT 04C1                      _TXEN 04C5                      _SYNC 04C4  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 00C0  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0012  
           __CFG_MCLRE$ON 0000                     ??_key 0075                     ??_isr 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _RCREG 001A  
                   _SPBRG 0099                     _PORTB 0006                     _PORTC 0007  
                   _TRISB 0086                     _TRISC 0087                     _TXREG 0019  
           __CFG_PWRTE$ON 0000                     _setup 00DD                     pclath 000A  
                   status 0003                     wtemp0 007E    __size_of_usart_write_c 000A  
         __initialization 0015              __end_of_main 00DD                    ??_main 0075  
                  ?_setup 0070                    _ANSELH 0189                    _OSCCON 008F  
           _usart_write_c 0109                    saved_w 007E   __end_of__initialization 0015  
          __pcstackCOMMON 0070             __end_of_setup 00EF            ?_usart_write_c 0070  
                 ??_setup 0074                __pmaintext 00C0                __pintentry 0004  
      __size_of_usart_ini 000F           ??_usart_write_c 0074                   __ptext1 00EF  
                 __ptext2 00DD                   __ptext3 0019                   __ptext4 0109  
                 __ptext5 00FE              __size_of_key 00A7              __size_of_isr 000B  
    end_of_initialization 0015         __end_of_usart_ini 00FE       start_initialization 0015  
             __end_of_key 00C0               __end_of_isr 0109  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002            __size_of_setup 0012         interrupt_function 0004  
   __end_of_usart_write_c 0113                 _usart_ini 00EF                ?_usart_ini 0070  
       __CFG_BOR4V$BOR40V 0000           usart_write_c@ch 0074             __size_of_main 001D  
                intlevel1 0000               ??_usart_ini 0074  
