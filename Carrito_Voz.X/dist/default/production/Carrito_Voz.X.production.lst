

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 11 03:18:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128                           
   129                           	psect	idataCOMMON
   130  06F4                     __pidataCOMMON:	
   131                           
   132                           ;initializer for _CH
   133  06F4  3420               	retlw	32
   134  0008                     _PORTD	set	8
   135  001A                     _RCREG	set	26
   136  0019                     _TXREG	set	25
   137  0045                     _RD5	set	69
   138  0044                     _RD4	set	68
   139  0065                     _RCIF	set	101
   140  00C4                     _CREN	set	196
   141  00C7                     _SPEN	set	199
   142  0088                     _TRISD	set	136
   143  008F                     _OSCCON	set	143
   144  0099                     _SPBRG	set	153
   145  04C1                     _TRMT	set	1217
   146  04C5                     _TXEN	set	1221
   147  04C4                     _SYNC	set	1220
   148  0188                     _ANSEL	set	392
   149  0189                     _ANSELH	set	393
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  07F8                     start_initialization:	
   155  07F8                     __initialization:	
   156                           
   157                           ; Initialize objects allocated to COMMON
   158  07F8  120A  118A  26F4   	fcall	__pidataCOMMON	;fetch initializer
   159  07FB  00F4               	movwf	__pdataCOMMON& (0+127)
   160  07FC                     end_of_initialization:	
   161                           ;End of C runtime variable initialization code
   162                           
   163  07FC                     __end_of__initialization:	
   164  07FC  0183               	clrf	3
   165  07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   166                           
   167                           	psect	dataCOMMON
   168  0074                     __pdataCOMMON:	
   169  0074                     _CH:	
   170  0074                     	ds	1
   171                           
   172                           	psect	cstackCOMMON
   173  0070                     __pcstackCOMMON:	
   174  0070                     ?_setup:	
   175  0070                     ??_setup:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ?_usart_ini:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ??_usart_ini:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ?_usart_write_c:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ??_usart_write_c:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?_usart_read:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ??_usart_read:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_UART_Data_Ready:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ??_UART_Data_Ready:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     usart_write_c@ch:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210  0070                     	ds	1
   211  0071                     ??_main:	
   212                           
   213                           ; 1 bytes @ 0x1
   214  0071                     	ds	3
   215                           
   216                           	psect	maintext
   217  072B                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 37 in file "main_Carrito.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          3       0       0       0       0
   240 ;;      Totals:         3       0       0       0       0
   241 ;;Total ram usage:        3 bytes
   242 ;; Hardware stack levels required when called:    1
   243 ;; This function calls:
   244 ;;		_UART_Data_Ready
   245 ;;		_setup
   246 ;;		_usart_ini
   247 ;;		_usart_read
   248 ;;		_usart_write_c
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           
   255                           ;psect for function _main
   256  072B                     _main:	
   257                           
   258                           ;main_Carrito.c: 38: setup();
   259                           
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   262  072B  120A  118A  271B  120A  118A  	fcall	_setup
   263                           
   264                           ;main_Carrito.c: 39: usart_ini();
   265  0730  120A  118A  270C  120A  118A  	fcall	_usart_ini
   266                           
   267                           ;main_Carrito.c: 40: _delay((unsigned long)((100)*(8000000/4000)));
   268  0735  3002               	movlw	2
   269  0736  00F3               	movwf	??_main+2
   270  0737  3004               	movlw	4
   271  0738  00F2               	movwf	??_main+1
   272  0739  30BA               	movlw	186
   273  073A  00F1               	movwf	??_main
   274  073B                     u77:	
   275  073B  0BF1               	decfsz	??_main,f
   276  073C  2F3B               	goto	u77
   277  073D  0BF2               	decfsz	??_main+1,f
   278  073E  2F3B               	goto	u77
   279  073F  0BF3               	decfsz	??_main+2,f
   280  0740  2F3B               	goto	u77
   281  0741  0000               	nop
   282                           
   283                           ;main_Carrito.c: 46: switch(CH){
   284  0742  2FD3               	goto	l590
   285  0743                     l594:	
   286                           ;main_Carrito.c: 47: case '1':
   287                           
   288                           
   289                           ;main_Carrito.c: 48: PORTD=0B00000001;
   290  0743  3001               	movlw	1
   291  0744  1283               	bcf	3,5	;RP0=0, select bank0
   292  0745  1303               	bcf	3,6	;RP1=0, select bank0
   293  0746  0088               	movwf	8	;volatile
   294                           
   295                           ;main_Carrito.c: 49: _delay((unsigned long)((8000)*(8000000/4000)));
   296  0747  3052               	movlw	82
   297  0748  00F3               	movwf	??_main+2
   298  0749  302B               	movlw	43
   299  074A  00F2               	movwf	??_main+1
   300  074B  3000               	movlw	0
   301  074C  00F1               	movwf	??_main
   302  074D                     u87:	
   303  074D  0BF1               	decfsz	??_main,f
   304  074E  2F4D               	goto	u87
   305  074F  0BF2               	decfsz	??_main+1,f
   306  0750  2F4D               	goto	u87
   307  0751  0BF3               	decfsz	??_main+2,f
   308  0752  2F4D               	goto	u87
   309  0753  0000               	nop
   310  0754  2FD0               	goto	l612
   311  0755                     l598:	
   312                           ;main_Carrito.c: 52: case '2':
   313                           
   314                           ;main_Carrito.c: 51: break;
   315                           
   316                           ;main_Carrito.c: 50: PORTD=0B00000000;
   317                           
   318                           
   319                           ;main_Carrito.c: 53: PORTD=0B00000010;
   320  0755  3002               	movlw	2
   321  0756  1283               	bcf	3,5	;RP0=0, select bank0
   322  0757  1303               	bcf	3,6	;RP1=0, select bank0
   323  0758  0088               	movwf	8	;volatile
   324                           
   325                           ;main_Carrito.c: 54: _delay((unsigned long)((8000)*(8000000/4000)));
   326  0759  3052               	movlw	82
   327  075A  00F3               	movwf	??_main+2
   328  075B  302B               	movlw	43
   329  075C  00F2               	movwf	??_main+1
   330  075D  3000               	movlw	0
   331  075E  00F1               	movwf	??_main
   332  075F                     u97:	
   333  075F  0BF1               	decfsz	??_main,f
   334  0760  2F5F               	goto	u97
   335  0761  0BF2               	decfsz	??_main+1,f
   336  0762  2F5F               	goto	u97
   337  0763  0BF3               	decfsz	??_main+2,f
   338  0764  2F5F               	goto	u97
   339  0765  0000               	nop
   340  0766  2FD0               	goto	l612
   341  0767                     l602:	
   342                           ;main_Carrito.c: 57: case '3':
   343                           
   344                           ;main_Carrito.c: 56: break;
   345                           
   346                           ;main_Carrito.c: 55: PORTD=0B00000000;
   347                           
   348                           
   349                           ;main_Carrito.c: 58: PORTD=0B00000100;
   350  0767  3004               	movlw	4
   351  0768  1283               	bcf	3,5	;RP0=0, select bank0
   352  0769  1303               	bcf	3,6	;RP1=0, select bank0
   353  076A  0088               	movwf	8	;volatile
   354  076B                     l72:	
   355                           ;main_Carrito.c: 59: while( RD4==0);
   356                           
   357  076B  1E08               	btfss	8,4	;volatile
   358  076C  2F6B               	goto	l72
   359                           
   360                           ;main_Carrito.c: 60: _delay((unsigned long)((2000)*(8000000/4000)));
   361  076D  3015               	movlw	21
   362  076E  00F3               	movwf	??_main+2
   363  076F  304B               	movlw	75
   364  0770  00F2               	movwf	??_main+1
   365  0771  30BE               	movlw	190
   366  0772  00F1               	movwf	??_main
   367  0773                     u107:	
   368  0773  0BF1               	decfsz	??_main,f
   369  0774  2F73               	goto	u107
   370  0775  0BF2               	decfsz	??_main+1,f
   371  0776  2F73               	goto	u107
   372  0777  0BF3               	decfsz	??_main+2,f
   373  0778  2F73               	goto	u107
   374  0779  0000               	nop
   375                           
   376                           ;main_Carrito.c: 61: PORTD=0B00000001;
   377  077A  3001               	movlw	1
   378  077B  1283               	bcf	3,5	;RP0=0, select bank0
   379  077C  1303               	bcf	3,6	;RP1=0, select bank0
   380  077D  0088               	movwf	8	;volatile
   381                           
   382                           ;main_Carrito.c: 62: _delay((unsigned long)((8000)*(8000000/4000)));
   383  077E  3052               	movlw	82
   384  077F  00F3               	movwf	??_main+2
   385  0780  302B               	movlw	43
   386  0781  00F2               	movwf	??_main+1
   387  0782  3000               	movlw	0
   388  0783  00F1               	movwf	??_main
   389  0784                     u117:	
   390  0784  0BF1               	decfsz	??_main,f
   391  0785  2F84               	goto	u117
   392  0786  0BF2               	decfsz	??_main+1,f
   393  0787  2F84               	goto	u117
   394  0788  0BF3               	decfsz	??_main+2,f
   395  0789  2F84               	goto	u117
   396  078A  0000               	nop
   397                           
   398                           ;main_Carrito.c: 63: PORTD=0B00001000;
   399  078B  3008               	movlw	8
   400  078C  1283               	bcf	3,5	;RP0=0, select bank0
   401  078D  1303               	bcf	3,6	;RP1=0, select bank0
   402  078E  0088               	movwf	8	;volatile
   403                           
   404                           ;main_Carrito.c: 64: _delay((unsigned long)((200)*(8000000/4000)));
   405  078F  3003               	movlw	3
   406  0790  00F3               	movwf	??_main+2
   407  0791  3008               	movlw	8
   408  0792  00F2               	movwf	??_main+1
   409  0793  3077               	movlw	119
   410  0794  00F1               	movwf	??_main
   411  0795                     u127:	
   412  0795  0BF1               	decfsz	??_main,f
   413  0796  2F95               	goto	u127
   414  0797  0BF2               	decfsz	??_main+1,f
   415  0798  2F95               	goto	u127
   416  0799  0BF3               	decfsz	??_main+2,f
   417  079A  2F95               	goto	u127
   418  079B  2FD0               	goto	l612
   419  079C                     l608:	
   420                           ;main_Carrito.c: 67: case '4':
   421                           
   422                           ;main_Carrito.c: 66: break;
   423                           
   424                           ;main_Carrito.c: 65: PORTD=0B00000000;
   425                           
   426                           
   427                           ;main_Carrito.c: 68: PORTD=0B00001000;
   428  079C  3008               	movlw	8
   429  079D  1283               	bcf	3,5	;RP0=0, select bank0
   430  079E  1303               	bcf	3,6	;RP1=0, select bank0
   431  079F  0088               	movwf	8	;volatile
   432  07A0                     l76:	
   433                           ;main_Carrito.c: 69: while(RD5==0 );
   434                           
   435  07A0  1E88               	btfss	8,5	;volatile
   436  07A1  2FA0               	goto	l76
   437                           
   438                           ;main_Carrito.c: 70: _delay((unsigned long)((3000)*(8000000/4000)));
   439  07A2  301F               	movlw	31
   440  07A3  00F3               	movwf	??_main+2
   441  07A4  3071               	movlw	113
   442  07A5  00F2               	movwf	??_main+1
   443  07A6  301E               	movlw	30
   444  07A7  00F1               	movwf	??_main
   445  07A8                     u137:	
   446  07A8  0BF1               	decfsz	??_main,f
   447  07A9  2FA8               	goto	u137
   448  07AA  0BF2               	decfsz	??_main+1,f
   449  07AB  2FA8               	goto	u137
   450  07AC  0BF3               	decfsz	??_main+2,f
   451  07AD  2FA8               	goto	u137
   452  07AE  0000               	nop
   453                           
   454                           ;main_Carrito.c: 71: PORTD=0B00000001;
   455  07AF  3001               	movlw	1
   456  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   457  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   458  07B2  0088               	movwf	8	;volatile
   459                           
   460                           ;main_Carrito.c: 72: _delay((unsigned long)((8000)*(8000000/4000)));
   461  07B3  3052               	movlw	82
   462  07B4  00F3               	movwf	??_main+2
   463  07B5  302B               	movlw	43
   464  07B6  00F2               	movwf	??_main+1
   465  07B7  3000               	movlw	0
   466  07B8  00F1               	movwf	??_main
   467  07B9                     u147:	
   468  07B9  0BF1               	decfsz	??_main,f
   469  07BA  2FB9               	goto	u147
   470  07BB  0BF2               	decfsz	??_main+1,f
   471  07BC  2FB9               	goto	u147
   472  07BD  0BF3               	decfsz	??_main+2,f
   473  07BE  2FB9               	goto	u147
   474  07BF  0000               	nop
   475                           
   476                           ;main_Carrito.c: 73: PORTD=0B00000100;
   477  07C0  3004               	movlw	4
   478  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   479  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   480  07C3  0088               	movwf	8	;volatile
   481                           
   482                           ;main_Carrito.c: 74: _delay((unsigned long)((200)*(8000000/4000)));
   483  07C4  3003               	movlw	3
   484  07C5  00F3               	movwf	??_main+2
   485  07C6  3008               	movlw	8
   486  07C7  00F2               	movwf	??_main+1
   487  07C8  3077               	movlw	119
   488  07C9  00F1               	movwf	??_main
   489  07CA                     u157:	
   490  07CA  0BF1               	decfsz	??_main,f
   491  07CB  2FCA               	goto	u157
   492  07CC  0BF2               	decfsz	??_main+1,f
   493  07CD  2FCA               	goto	u157
   494  07CE  0BF3               	decfsz	??_main+2,f
   495  07CF  2FCA               	goto	u157
   496  07D0                     l612:	
   497                           
   498                           ;main_Carrito.c: 75: PORTD=0B00000000;
   499  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   500  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   501  07D2  0188               	clrf	8	;volatile
   502  07D3                     l590:	
   503                           ;main_Carrito.c: 41: while(1){
   504                           
   505                           ;main_Carrito.c: 77: }
   506                           
   507                           ;main_Carrito.c: 76: break;
   508                           
   509                           
   510                           ;main_Carrito.c: 43: if(UART_Data_Ready()){
   511  07D3  120A  118A  26F5  120A  118A  	fcall	_UART_Data_Ready
   512  07D8  3A00               	xorlw	0
   513  07D9  1903               	skipnz
   514  07DA  2FD3               	goto	l590
   515                           
   516                           ;main_Carrito.c: 44: CH=usart_read();
   517  07DB  120A  118A  26FB  120A  118A  	fcall	_usart_read
   518  07E0  00F1               	movwf	??_main
   519  07E1  0871               	movf	??_main,w
   520  07E2  00F4               	movwf	_CH
   521                           
   522                           ;main_Carrito.c: 45: usart_write_c(CH);
   523  07E3  0874               	movf	_CH,w
   524  07E4  120A  118A  2702  120A  118A  	fcall	_usart_write_c
   525  07E9  0874               	movf	_CH,w
   526                           
   527                           ; Switch size 1, requested type "space"
   528                           ; Number of cases is 4, Range of values is 49 to 52
   529                           ; switch strategies available:
   530                           ; Name         Instructions Cycles
   531                           ; simple_byte           13     7 (average)
   532                           ; direct_byte           23    11 (fixed)
   533                           ; jumptable            263     9 (fixed)
   534                           ;	Chosen strategy is simple_byte
   535  07EA  3A31               	xorlw	49	; case 49
   536  07EB  1903               	skipnz
   537  07EC  2F43               	goto	l594
   538  07ED  3A03               	xorlw	3	; case 50
   539  07EE  1903               	skipnz
   540  07EF  2F55               	goto	l598
   541  07F0  3A01               	xorlw	1	; case 51
   542  07F1  1903               	skipnz
   543  07F2  2F67               	goto	l602
   544  07F3  3A07               	xorlw	7	; case 52
   545  07F4  1903               	skipnz
   546  07F5  2F9C               	goto	l608
   547  07F6  2FD3               	goto	l590
   548  07F7  2FD3               	goto	l590
   549  07F8                     __end_of_main:	
   550                           
   551                           	psect	text1
   552  0702                     __ptext1:	
   553 ;; *************** function _usart_write_c *****************
   554 ;; Defined at:
   555 ;;		line 40 in file "Serial.h"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  ch              1    wreg     unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  ch              1    0[COMMON] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;;		_usart_write_s
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _usart_write_c
   585  0702                     _usart_write_c:	
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _usart_write_c: [wreg]
   589                           ;usart_write_c@ch stored from wreg
   590  0702  00F0               	movwf	usart_write_c@ch
   591  0703                     l42:	
   592                           ;Serial.h: 41: while(!TRMT);
   593                           
   594  0703  1683               	bsf	3,5	;RP0=1, select bank1
   595  0704  1303               	bcf	3,6	;RP1=0, select bank1
   596  0705  1C98               	btfss	24,1	;volatile
   597  0706  2F03               	goto	l42
   598                           
   599                           ;Serial.h: 42: TXREG=ch;
   600  0707  0870               	movf	usart_write_c@ch,w
   601  0708  1283               	bcf	3,5	;RP0=0, select bank0
   602  0709  1303               	bcf	3,6	;RP1=0, select bank0
   603  070A  0099               	movwf	25	;volatile
   604  070B  0008               	return
   605  070C                     __end_of_usart_write_c:	
   606                           
   607                           	psect	text2
   608  06FB                     __ptext2:	
   609 ;; *************** function _usart_read *****************
   610 ;; Defined at:
   611 ;;		line 53 in file "Serial.h"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      unsigned char 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _usart_read
   640  06FB                     _usart_read:	
   641                           
   642                           ;Serial.h: 55: if(RCREG)
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _usart_read: [wreg+status,2+status,0]
   646  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   647  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   648  06FD  081A               	movf	26,w	;volatile
   649  06FE  1903               	btfsc	3,2
   650  06FF  0008               	return
   651                           
   652                           ;Serial.h: 56: return RCREG;
   653  0700  081A               	movf	26,w	;volatile
   654  0701  0008               	return
   655  0702                     __end_of_usart_read:	
   656                           
   657                           	psect	text3
   658  070C                     __ptext3:	
   659 ;; *************** function _usart_ini *****************
   660 ;; Defined at:
   661 ;;		line 27 in file "Serial.h"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _usart_ini
   690  070C                     _usart_ini:	
   691                           
   692                           ;Serial.h: 29: SPBRG=32;
   693                           
   694                           ;incstack = 0
   695                           ; Regs used in _usart_ini: [wreg]
   696  070C  3020               	movlw	32
   697  070D  1683               	bsf	3,5	;RP0=1, select bank1
   698  070E  1303               	bcf	3,6	;RP1=0, select bank1
   699  070F  0099               	movwf	25	;volatile
   700                           
   701                           ;Serial.h: 30: SYNC=0;
   702  0710  1218               	bcf	24,4	;volatile
   703                           
   704                           ;Serial.h: 31: SPEN=1;
   705  0711  1283               	bcf	3,5	;RP0=0, select bank0
   706  0712  1303               	bcf	3,6	;RP1=0, select bank0
   707  0713  1798               	bsf	24,7	;volatile
   708                           
   709                           ;Serial.h: 32: TXEN=1;
   710  0714  1683               	bsf	3,5	;RP0=1, select bank1
   711  0715  1303               	bcf	3,6	;RP1=0, select bank1
   712  0716  1698               	bsf	24,5	;volatile
   713                           
   714                           ;Serial.h: 33: CREN=1;
   715  0717  1283               	bcf	3,5	;RP0=0, select bank0
   716  0718  1303               	bcf	3,6	;RP1=0, select bank0
   717  0719  1618               	bsf	24,4	;volatile
   718  071A  0008               	return
   719  071B                     __end_of_usart_ini:	
   720                           
   721                           	psect	text4
   722  071B                     __ptext4:	
   723 ;; *************** function _setup *****************
   724 ;; Defined at:
   725 ;;		line 84 in file "main_Carrito.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _setup
   754  071B                     _setup:	
   755                           
   756                           ;main_Carrito.c: 85: OSCCON=0B01111000;
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _setup: [wreg+status,2]
   760  071B  3078               	movlw	120
   761  071C  1683               	bsf	3,5	;RP0=1, select bank1
   762  071D  1303               	bcf	3,6	;RP1=0, select bank1
   763  071E  008F               	movwf	15	;volatile
   764                           
   765                           ;main_Carrito.c: 87: PORTD=0;
   766  071F  1283               	bcf	3,5	;RP0=0, select bank0
   767  0720  1303               	bcf	3,6	;RP1=0, select bank0
   768  0721  0188               	clrf	8	;volatile
   769                           
   770                           ;main_Carrito.c: 88: ANSELH=0;
   771  0722  1683               	bsf	3,5	;RP0=1, select bank3
   772  0723  1703               	bsf	3,6	;RP1=1, select bank3
   773  0724  0189               	clrf	9	;volatile
   774                           
   775                           ;main_Carrito.c: 89: ANSEL=0;
   776  0725  0188               	clrf	8	;volatile
   777                           
   778                           ;main_Carrito.c: 90: TRISD=0B00110000;
   779  0726  3030               	movlw	48
   780  0727  1683               	bsf	3,5	;RP0=1, select bank1
   781  0728  1303               	bcf	3,6	;RP1=0, select bank1
   782  0729  0088               	movwf	8	;volatile
   783  072A  0008               	return
   784  072B                     __end_of_setup:	
   785                           
   786                           	psect	text5
   787  06F5                     __ptext5:	
   788 ;; *************** function _UART_Data_Ready *****************
   789 ;; Defined at:
   790 ;;		line 59 in file "Serial.h"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      unsigned char 
   797 ;; Registers used:
   798 ;;		wreg
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         0       0       0       0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _UART_Data_Ready
   819  06F5                     _UART_Data_Ready:	
   820                           
   821                           ;Serial.h: 60: return RCIF;
   822                           
   823                           ;incstack = 0
   824                           ; Regs used in _UART_Data_Ready: [wreg]
   825  06F5  3000               	movlw	0
   826  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   827  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   828  06F8  1A8C               	btfsc	12,5	;volatile
   829  06F9  3001               	movlw	1
   830  06FA  0008               	return
   831  06FB                     __end_of_UART_Data_Ready:	
   832  007E                     btemp	set	126	;btemp
   833  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_usart_write_c

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                    _UART_Data_Ready
                              _setup
                          _usart_ini
                         _usart_read
                      _usart_write_c
 ---------------------------------------------------------------------------------
 (1) _usart_write_c                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usart_ini                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _setup
   _usart_ini
   _usart_read
   _usart_write_c

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       5      12        0.0%
ABS                  0      0       5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 11 03:18:15 2018

             __CFG_CP$OFF 0000                        l42 0703                        _CH 0074  
                      l72 076B                        l76 07A0                        u77 073B  
                      u87 074D                        u97 075F                       l602 0767  
                     l612 07D0                       l608 079C                       l590 07D3  
                     l594 0743                       l598 0755                       _RD4 0044  
                     _RD5 0045                       u107 0773                       u117 0784  
                     u127 0795                       u137 07A8                       u147 07B9  
                     u157 07CA              __CFG_CPD$OFF 0000              __CFG_IESO$ON 0000  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      _CREN 00C4  
                    _RCIF 0065                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 072B                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000             __CFG_MCLRE$ON 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCREG 001A                     _SPBRG 0099                     _PORTD 0008  
                   _TRISD 0088                     _TXREG 0019             __CFG_PWRTE$ON 0000  
                   _setup 071B                     status 0003                     wtemp0 007E  
  __size_of_usart_write_c 000A           __initialization 07F8              __end_of_main 07F8  
                  ??_main 0071                    ?_setup 0070                    _ANSELH 0189  
                  _OSCCON 008F             _usart_write_c 0702              __pdataCOMMON 0074  
 __end_of__initialization 07FC            __pcstackCOMMON 0070             __end_of_setup 072B  
          ?_usart_write_c 0070                   ??_setup 0070  __size_of_UART_Data_Ready 0006  
              __pmaintext 072B        __size_of_usart_ini 000F           ??_usart_write_c 0070  
                 __ptext1 0702                   __ptext2 06FB                   __ptext3 070C  
                 __ptext4 071B                   __ptext5 06F5      end_of_initialization 07FC  
       ??_UART_Data_Ready 0070         __end_of_usart_ini 071B                _usart_read 06FB  
           __pidataCOMMON 06F4       start_initialization 07F8                 ___latbits 0002  
             ?_usart_read 0070            __size_of_setup 0010           _UART_Data_Ready 06F5  
   __end_of_usart_write_c 070C                 _usart_ini 070C       __size_of_usart_read 0007  
              ?_usart_ini 0070   __end_of_UART_Data_Ready 06FB         __CFG_BOR4V$BOR40V 0000  
         usart_write_c@ch 0070             __size_of_main 00CD              ??_usart_read 0070  
             ??_usart_ini 0070        __end_of_usart_read 0702          ?_UART_Data_Ready 0070  
