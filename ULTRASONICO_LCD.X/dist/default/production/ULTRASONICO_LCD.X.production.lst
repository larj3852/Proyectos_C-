

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 28 13:54:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  000E                     _TMR1	set	14
   137  000E                     _TMR1L	set	14
   138  000F                     _TMR1H	set	15
   139  0010                     _T1CON	set	16
   140  0008                     _PORTD	set	8
   141  0040                     _RD0	set	64
   142  0080                     _TMR1ON	set	128
   143  0041                     _RD1	set	65
   144  0043                     _RD3	set	67
   145  0042                     _RD2	set	66
   146  0088                     _TRISD	set	136
   147  008F                     _OSCCON	set	143
   148                           
   149                           	psect	strings
   150  0003                     __pstrings:	
   151  0003                     stringtab:	
   152  0003                     __stringtab:	
   153                           
   154                           ;	String table - string pointers are 1 byte each
   155  0003  1BFF               	btfsc	btemp+1,7
   156  0004  280D               	ljmp	stringcode
   157  0005  1383               	bcf	3,7
   158  0006  187F               	btfsc	btemp+1,0
   159  0007  1783               	bsf	3,7
   160  0008  0800               	movf	0,w
   161  0009  0A84               	incf	4,f
   162  000A  1903               	skipnz
   163  000B  0AFF               	incf	btemp+1,f
   164  000C  0008               	return
   165  000D                     stringcode:	
   166  000D                     stringdir:	
   167  000D  3000               	movlw	high stringdir
   168  000E  008A               	movwf	10
   169  000F  0804               	movf	4,w
   170  0010  0A84               	incf	4,f
   171  0011  0782               	addwf	2,f
   172  0012                     __stringbase:	
   173  0012  3400               	retlw	0
   174  0013                     __end_of__stringtab:	
   175  0013                     STR_1:	
   176  0013  3444               	retlw	68	;'D'
   177  0014  3449               	retlw	73	;'I'
   178  0015  3453               	retlw	83	;'S'
   179  0016  3454               	retlw	84	;'T'
   180  0017  3441               	retlw	65	;'A'
   181  0018  344E               	retlw	78	;'N'
   182  0019  3443               	retlw	67	;'C'
   183  001A  3449               	retlw	73	;'I'
   184  001B  3441               	retlw	65	;'A'
   185  001C  3400               	retlw	0
   186  001D                     STR_2:	
   187  001D  3463               	retlw	99	;'c'
   188  001E  346D               	retlw	109	;'m'
   189  001F  3420               	retlw	32	;' '
   190  0020  3400               	retlw	0
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  07F3                     start_initialization:	
   196  07F3                     __initialization:	
   197                           
   198                           ; Clear objects allocated to BANK0
   199  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   200  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   201  07F5  01AD               	clrf	__pbssBANK0& (0+127)
   202  07F6  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   203  07F7  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   204  07F8  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   205  07F9  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   206  07FA  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   207  07FB  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   208  07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211  07FC                     __end_of__initialization:	
   212  07FC  0183               	clrf	3
   213  07FD  120A  118A  2F25   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	bssBANK0
   216  002D                     __pbssBANK0:	
   217  002D                     _us:	
   218  002D                     	ds	2
   219  002F                     _cm:	
   220  002F                     	ds	2
   221  0031                     _centi:	
   222  0031                     	ds	3
   223                           
   224                           	psect	cstackCOMMON
   225  0070                     __pcstackCOMMON:	
   226  0070                     ?_lcd_cmd:	
   227  0070                     ?_setup:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ??_setup:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_distancia:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_lcd_ini:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_lcd_write_c:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ??_lcd_write_c:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?___awdiv:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?___lwdiv:	
   252                           ; 2 bytes @ 0x0
   253                           
   254  0070                     ?___lwmod:	
   255                           ; 2 bytes @ 0x0
   256                           
   257  0070                     lcd_cmd@cmd:	
   258                           ; 2 bytes @ 0x0
   259                           
   260  0070                     ___awdiv@divisor:	
   261                           ; 2 bytes @ 0x0
   262                           
   263  0070                     ___lwdiv@divisor:	
   264                           ; 2 bytes @ 0x0
   265                           
   266  0070                     ___lwmod@divisor:	
   267                           ; 2 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271  0070                     	ds	2
   272  0072                     ??_lcd_cmd:	
   273  0072                     lcd_write_c@ch:	
   274                           ; 1 bytes @ 0x2
   275                           
   276  0072                     ___awdiv@dividend:	
   277                           ; 1 bytes @ 0x2
   278                           
   279  0072                     ___lwdiv@dividend:	
   280                           ; 2 bytes @ 0x2
   281                           
   282  0072                     ___lwmod@dividend:	
   283                           ; 2 bytes @ 0x2
   284                           
   285                           
   286                           ; 2 bytes @ 0x2
   287  0072                     	ds	1
   288  0073                     ?_lcd_write_s:	
   289  0073                     lcd_write_s@st:	
   290                           ; 1 bytes @ 0x3
   291                           
   292                           
   293                           ; 2 bytes @ 0x3
   294  0073                     	ds	1
   295  0074                     ??_lcd_ini:	
   296  0074                     ?_lcd_pos:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??___awdiv:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ??___lwdiv:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??___lwmod:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     lcd_pos@fila:	
   309                           ; 1 bytes @ 0x4
   310                           
   311                           
   312                           ; 2 bytes @ 0x4
   313  0074                     	ds	1
   314  0075                     ??_lcd_write_s:	
   315  0075                     ___awdiv@counter:	
   316                           ; 1 bytes @ 0x5
   317                           
   318  0075                     ___lwmod@counter:	
   319                           ; 1 bytes @ 0x5
   320                           
   321  0075                     ___lwdiv@quotient:	
   322                           ; 1 bytes @ 0x5
   323                           
   324                           
   325                           ; 2 bytes @ 0x5
   326  0075                     	ds	1
   327  0076                     ___awdiv@sign:	
   328  0076                     lcd_pos@columna:	
   329                           ; 1 bytes @ 0x6
   330                           
   331                           
   332                           ; 2 bytes @ 0x6
   333  0076                     	ds	1
   334  0077                     ___lwdiv@counter:	
   335  0077                     ___awdiv@quotient:	
   336                           ; 1 bytes @ 0x7
   337                           
   338                           
   339                           ; 2 bytes @ 0x7
   340  0077                     	ds	1
   341  0078                     ?_utoa:	
   342  0078                     ??_lcd_pos:	
   343                           ; 1 bytes @ 0x8
   344                           
   345  0078                     utoa@val:	
   346                           ; 1 bytes @ 0x8
   347                           
   348                           
   349                           ; 2 bytes @ 0x8
   350  0078                     	ds	1
   351  0079                     ??_distancia:	
   352                           
   353                           ; 1 bytes @ 0x9
   354  0079                     	ds	1
   355  007A                     utoa@base:	
   356                           
   357                           ; 2 bytes @ 0xA
   358  007A                     	ds	2
   359  007C                     ??_utoa:	
   360                           
   361                           ; 1 bytes @ 0xC
   362  007C                     	ds	1
   363  007D                     ??_itoa:	
   364                           
   365                           ; 1 bytes @ 0xD
   366  007D                     	ds	1
   367                           
   368                           	psect	cstackBANK0
   369  0020                     __pcstackBANK0:	
   370  0020                     utoa@v:	
   371                           
   372                           ; 2 bytes @ 0x0
   373  0020                     	ds	2
   374  0022                     utoa@c:	
   375                           
   376                           ; 1 bytes @ 0x2
   377  0022                     	ds	1
   378  0023                     utoa@buf:	
   379                           
   380                           ; 1 bytes @ 0x3
   381  0023                     	ds	1
   382  0024                     ?_itoa:	
   383  0024                     itoa@val:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           ; 2 bytes @ 0x4
   388  0024                     	ds	2
   389  0026                     itoa@base:	
   390                           
   391                           ; 2 bytes @ 0x6
   392  0026                     	ds	2
   393  0028                     itoa@cp:	
   394                           
   395                           ; 1 bytes @ 0x8
   396  0028                     	ds	1
   397  0029                     itoa@buf:	
   398                           
   399                           ; 1 bytes @ 0x9
   400  0029                     	ds	1
   401  002A                     ??_main:	
   402                           
   403                           ; 1 bytes @ 0xA
   404  002A                     	ds	3
   405                           
   406                           	psect	maintext
   407  0725                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 46 in file "Main_Usonico.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       3       0       0       0
   430 ;;      Totals:         0       3       0       0       0
   431 ;;Total ram usage:        3 bytes
   432 ;; Hardware stack levels required when called:    3
   433 ;; This function calls:
   434 ;;		_distancia
   435 ;;		_itoa
   436 ;;		_lcd_ini
   437 ;;		_lcd_pos
   438 ;;		_lcd_write_s
   439 ;;		_setup
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _main
   447  0725                     _main:	
   448                           
   449                           ;Main_Usonico.c: 47: setup();
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   453  0725  120A  118A  24FE  120A  118A  	fcall	_setup
   454                           
   455                           ;Main_Usonico.c: 48: lcd_ini();
   456  072A  120A  118A  26CC  120A  118A  	fcall	_lcd_ini
   457                           
   458                           ;Main_Usonico.c: 49: lcd_pos(0,3);
   459  072F  3000               	movlw	0
   460  0730  00F4               	movwf	lcd_pos@fila
   461  0731  00F5               	movwf	lcd_pos@fila+1
   462  0732  3003               	movlw	3
   463  0733  00F6               	movwf	lcd_pos@columna
   464  0734  3000               	movlw	0
   465  0735  00F7               	movwf	lcd_pos@columna+1
   466  0736  120A  118A  250E  120A  118A  	fcall	_lcd_pos
   467                           
   468                           ;Main_Usonico.c: 50: lcd_write_s("DISTANCIA");
   469  073B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   470  073C  00F3               	movwf	lcd_write_s@st
   471  073D  3080               	movlw	128
   472  073E  00F4               	movwf	lcd_write_s@st+1
   473  073F  120A  118A  252E  120A  118A  	fcall	_lcd_write_s
   474  0744                     l1042:	
   475                           ;Main_Usonico.c: 51: while(1){
   476                           
   477                           
   478                           ;Main_Usonico.c: 52: distancia();
   479  0744  120A  118A  25FC  120A  118A  	fcall	_distancia
   480                           
   481                           ;Main_Usonico.c: 53: itoa(centi,cm,10);
   482  0749  1283               	bcf	3,5	;RP0=0, select bank0
   483  074A  1303               	bcf	3,6	;RP1=0, select bank0
   484  074B  0830               	movf	_cm+1,w
   485  074C  00A5               	movwf	itoa@val+1
   486  074D  082F               	movf	_cm,w
   487  074E  00A4               	movwf	itoa@val
   488  074F  300A               	movlw	10
   489  0750  00A6               	movwf	itoa@base
   490  0751  3000               	movlw	0
   491  0752  00A7               	movwf	itoa@base+1
   492  0753  3031               	movlw	(low (_centi| 0))& (0+255)
   493  0754  120A  118A  2551  120A  118A  	fcall	_itoa
   494                           
   495                           ;Main_Usonico.c: 54: lcd_pos(1,5);
   496  0759  3001               	movlw	1
   497  075A  00F4               	movwf	lcd_pos@fila
   498  075B  3000               	movlw	0
   499  075C  00F5               	movwf	lcd_pos@fila+1
   500  075D  3005               	movlw	5
   501  075E  00F6               	movwf	lcd_pos@columna
   502  075F  3000               	movlw	0
   503  0760  00F7               	movwf	lcd_pos@columna+1
   504  0761  120A  118A  250E  120A  118A  	fcall	_lcd_pos
   505                           
   506                           ;Main_Usonico.c: 55: lcd_write_s(centi);
   507  0766  3031               	movlw	(low (_centi| 0))& (0+255)
   508  0767  00F3               	movwf	lcd_write_s@st
   509  0768  3000               	movlw	0
   510  0769  00F4               	movwf	lcd_write_s@st+1
   511  076A  120A  118A  252E  120A  118A  	fcall	_lcd_write_s
   512                           
   513                           ;Main_Usonico.c: 56: lcd_write_s("cm ");
   514  076F  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   515  0770  00F3               	movwf	lcd_write_s@st
   516  0771  3080               	movlw	128
   517  0772  00F4               	movwf	lcd_write_s@st+1
   518  0773  120A  118A  252E  120A  118A  	fcall	_lcd_write_s
   519                           
   520                           ;Main_Usonico.c: 57: _delay((unsigned long)((500)*(8000000/4000)));
   521  0778  3006               	movlw	6
   522  0779  1283               	bcf	3,5	;RP0=0, select bank0
   523  077A  1303               	bcf	3,6	;RP1=0, select bank0
   524  077B  00AC               	movwf	??_main+2
   525  077C  3013               	movlw	19
   526  077D  00AB               	movwf	??_main+1
   527  077E  30AD               	movlw	173
   528  077F  00AA               	movwf	??_main
   529  0780                     u737:	
   530  0780  0BAA               	decfsz	??_main,f
   531  0781  2F80               	goto	u737
   532  0782  0BAB               	decfsz	??_main+1,f
   533  0783  2F80               	goto	u737
   534  0784  0BAC               	decfsz	??_main+2,f
   535  0785  2F80               	goto	u737
   536  0786  2F44               	goto	l1042
   537  0787                     __end_of_main:	
   538                           
   539                           	psect	text1
   540  04FE                     __ptext1:	
   541 ;; *************** function _setup *****************
   542 ;; Defined at:
   543 ;;		line 61 in file "Main_Usonico.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _setup
   572  04FE                     _setup:	
   573                           
   574                           ;Main_Usonico.c: 62: OSCCON=0B01111000;
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _setup: [wreg+status,2]
   578  04FE  3078               	movlw	120
   579  04FF  1683               	bsf	3,5	;RP0=1, select bank1
   580  0500  1303               	bcf	3,6	;RP1=0, select bank1
   581  0501  008F               	movwf	15	;volatile
   582                           
   583                           ;Main_Usonico.c: 63: PORTD=0;
   584  0502  1283               	bcf	3,5	;RP0=0, select bank0
   585  0503  1303               	bcf	3,6	;RP1=0, select bank0
   586  0504  0188               	clrf	8	;volatile
   587                           
   588                           ;Main_Usonico.c: 64: TRISD=0B00000001;
   589  0505  3001               	movlw	1
   590  0506  1683               	bsf	3,5	;RP0=1, select bank1
   591  0507  1303               	bcf	3,6	;RP1=0, select bank1
   592  0508  0088               	movwf	8	;volatile
   593                           
   594                           ;Main_Usonico.c: 65: T1CON=0B00010000;
   595  0509  3010               	movlw	16
   596  050A  1283               	bcf	3,5	;RP0=0, select bank0
   597  050B  1303               	bcf	3,6	;RP1=0, select bank0
   598  050C  0090               	movwf	16	;volatile
   599  050D  0008               	return
   600  050E                     __end_of_setup:	
   601                           
   602                           	psect	text2
   603  052E                     __ptext2:	
   604 ;; *************** function _lcd_write_s *****************
   605 ;; Defined at:
   606 ;;		line 96 in file "LCD_cabecera.h"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  st              2    3[COMMON] PTR const unsigned char 
   609 ;;		 -> STR_2(4), centi(3), STR_1(10), 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         2       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         2       0       0       0       0
   625 ;;Total ram usage:        2 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; Hardware stack levels required when called:    1
   628 ;; This function calls:
   629 ;;		_lcd_write_c
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _lcd_write_s
   637  052E                     _lcd_write_s:	
   638  052E                     l986:	
   639                           ;LCD_cabecera.h: 98: for(;*st!='\0';st++){
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _lcd_write_s: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   643                           
   644  052E  0874               	movf	lcd_write_s@st+1,w
   645  052F  1283               	bcf	3,5	;RP0=0, select bank0
   646  0530  1303               	bcf	3,6	;RP1=0, select bank0
   647  0531  00FF               	movwf	127
   648  0532  0873               	movf	lcd_write_s@st,w
   649  0533  0084               	movwf	4
   650  0534  120A  118A  2003  120A  118A  	fcall	stringtab
   651  0539  3A00               	xorlw	0
   652  053A  1903               	btfsc	3,2
   653  053B  0008               	return
   654                           
   655                           ;LCD_cabecera.h: 99: lcd_write_c(*st);
   656  053C  0874               	movf	lcd_write_s@st+1,w
   657  053D  1283               	bcf	3,5	;RP0=0, select bank0
   658  053E  1303               	bcf	3,6	;RP1=0, select bank0
   659  053F  00FF               	movwf	127
   660  0540  0873               	movf	lcd_write_s@st,w
   661  0541  0084               	movwf	4
   662  0542  120A  118A  2003  120A  118A  	fcall	stringtab
   663  0547  120A  118A  25A0  120A  118A  	fcall	_lcd_write_c
   664  054C  3001               	movlw	1
   665  054D  07F3               	addwf	lcd_write_s@st,f
   666  054E  1803               	skipnc
   667  054F  0AF4               	incf	lcd_write_s@st+1,f
   668  0550  2D2E               	goto	l986
   669  0551                     __end_of_lcd_write_s:	
   670                           
   671                           	psect	text3
   672  05A0                     __ptext3:	
   673 ;; *************** function _lcd_write_c *****************
   674 ;; Defined at:
   675 ;;		line 86 in file "LCD_cabecera.h"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  ch              1    wreg     unsigned char 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  ch              1    2[COMMON] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0
   691 ;;      Temps:          2       0       0       0       0
   692 ;;      Totals:         3       0       0       0       0
   693 ;;Total ram usage:        3 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_lcd_write_s
   699 ;;		_lcd_custom
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _lcd_write_c
   705  05A0                     _lcd_write_c:	
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _lcd_write_c: [wreg+status,2+status,0]
   709                           ;lcd_write_c@ch stored from wreg
   710  05A0  00F2               	movwf	lcd_write_c@ch
   711                           
   712                           ;LCD_cabecera.h: 88: RD2=1;
   713  05A1  1283               	bcf	3,5	;RP0=0, select bank0
   714  05A2  1303               	bcf	3,6	;RP1=0, select bank0
   715  05A3  1508               	bsf	8,2	;volatile
   716                           
   717                           ;LCD_cabecera.h: 89: _delay((unsigned long)((1)*(8000000/4000)));
   718  05A4  3003               	movlw	3
   719  05A5  00F1               	movwf	??_lcd_write_c+1
   720  05A6  3097               	movlw	151
   721  05A7  00F0               	movwf	??_lcd_write_c
   722  05A8                     u747:	
   723  05A8  0BF0               	decfsz	??_lcd_write_c,f
   724  05A9  2DA8               	goto	u747
   725  05AA  0BF1               	decfsz	??_lcd_write_c+1,f
   726  05AB  2DA8               	goto	u747
   727  05AC  2DAD               	nop2
   728                           
   729                           ;LCD_cabecera.h: 90: PORTD=(PORTD&0X0F)|(ch&0XF0);
   730  05AD  30F0               	movlw	240
   731  05AE  0572               	andwf	lcd_write_c@ch,w
   732  05AF  00F0               	movwf	??_lcd_write_c
   733  05B0  1283               	bcf	3,5	;RP0=0, select bank0
   734  05B1  1303               	bcf	3,6	;RP1=0, select bank0
   735  05B2  0808               	movf	8,w	;volatile
   736  05B3  390F               	andlw	15
   737  05B4  0470               	iorwf	??_lcd_write_c,w
   738  05B5  0088               	movwf	8	;volatile
   739                           
   740                           ;LCD_cabecera.h: 91: ((RD3=1),(RD3=0));
   741  05B6  1588               	bsf	8,3	;volatile
   742  05B7  1188               	bcf	8,3	;volatile
   743                           
   744                           ;LCD_cabecera.h: 92: PORTD=(PORTD&0X0F)|((ch<<4)&0XF0);
   745  05B8  0872               	movf	lcd_write_c@ch,w
   746  05B9  00F0               	movwf	??_lcd_write_c
   747  05BA  3004               	movlw	4
   748  05BB                     u515:	
   749  05BB  1003               	clrc
   750  05BC  0DF0               	rlf	??_lcd_write_c,f
   751  05BD  3EFF               	addlw	-1
   752  05BE  1D03               	skipz
   753  05BF  2DBB               	goto	u515
   754  05C0  30F0               	movlw	240
   755  05C1  0570               	andwf	??_lcd_write_c,w
   756  05C2  00F1               	movwf	??_lcd_write_c+1
   757  05C3  0808               	movf	8,w	;volatile
   758  05C4  390F               	andlw	15
   759  05C5  0471               	iorwf	??_lcd_write_c+1,w
   760  05C6  0088               	movwf	8	;volatile
   761                           
   762                           ;LCD_cabecera.h: 93: ((RD3=1),(RD3=0));
   763  05C7  1588               	bsf	8,3	;volatile
   764  05C8  1188               	bcf	8,3	;volatile
   765  05C9  0008               	return
   766  05CA                     __end_of_lcd_write_c:	
   767                           
   768                           	psect	text4
   769  050E                     __ptext4:	
   770 ;; *************** function _lcd_pos *****************
   771 ;; Defined at:
   772 ;;		line 103 in file "LCD_cabecera.h"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  fila            2    4[COMMON] int 
   775 ;;  columna         2    6[COMMON] int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         4       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         4       0       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		_lcd_cmd
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _lcd_pos
   803  050E                     _lcd_pos:	
   804                           
   805                           ;LCD_cabecera.h: 105: if(fila==0){
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _lcd_pos: [wreg+status,2+status,0+pclath+cstack]
   809  050E  0874               	movf	lcd_pos@fila,w
   810  050F  0475               	iorwf	lcd_pos@fila+1,w
   811  0510  1D03               	btfss	3,2
   812  0511  2D1E               	goto	l992
   813                           
   814                           ;LCD_cabecera.h: 106: lcd_cmd(columna+0B10000000);
   815  0512  0876               	movf	lcd_pos@columna,w
   816  0513  3E80               	addlw	128
   817  0514  00F0               	movwf	lcd_cmd@cmd
   818  0515  0877               	movf	lcd_pos@columna+1,w
   819  0516  1803               	skipnc
   820  0517  3E01               	addlw	1
   821  0518  3E00               	addlw	0
   822  0519  00F1               	movwf	lcd_cmd@cmd+1
   823  051A  120A  118A  2577   	fcall	_lcd_cmd
   824                           
   825                           ;LCD_cabecera.h: 107: }
   826  051D  0008               	return
   827  051E                     l992:	
   828                           
   829                           ;LCD_cabecera.h: 108: else if(fila==1){
   830  051E  0374               	decf	lcd_pos@fila,w
   831  051F  0475               	iorwf	lcd_pos@fila+1,w
   832  0520  1D03               	btfss	3,2
   833  0521  0008               	return
   834                           
   835                           ;LCD_cabecera.h: 109: lcd_cmd(columna+0B11000000);
   836  0522  0876               	movf	lcd_pos@columna,w
   837  0523  3EC0               	addlw	192
   838  0524  00F0               	movwf	lcd_cmd@cmd
   839  0525  0877               	movf	lcd_pos@columna+1,w
   840  0526  1803               	skipnc
   841  0527  3E01               	addlw	1
   842  0528  3E00               	addlw	0
   843  0529  00F1               	movwf	lcd_cmd@cmd+1
   844  052A  120A  118A  2577   	fcall	_lcd_cmd
   845                           
   846                           ;LCD_cabecera.h: 111: else{}
   847                           
   848                           ;LCD_cabecera.h: 110: }
   849  052D  0008               	return
   850  052E                     __end_of_lcd_pos:	
   851                           
   852                           	psect	text5
   853  06CC                     __ptext5:	
   854 ;; *************** function _lcd_ini *****************
   855 ;; Defined at:
   856 ;;		line 59 in file "LCD_cabecera.h"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          2       0       0       0       0
   873 ;;      Totals:         2       0       0       0       0
   874 ;;Total ram usage:        2 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    1
   877 ;; This function calls:
   878 ;;		_lcd_cmd
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _lcd_ini
   886  06CC                     _lcd_ini:	
   887                           
   888                           ;LCD_cabecera.h: 61: _delay((unsigned long)((20)*(8000000/4000)));
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _lcd_ini: [wreg+status,2+status,0+pclath+cstack]
   892  06CC  3034               	movlw	52
   893  06CD  00F5               	movwf	??_lcd_ini+1
   894  06CE  30F1               	movlw	241
   895  06CF  00F4               	movwf	??_lcd_ini
   896  06D0                     u757:	
   897  06D0  0BF4               	decfsz	??_lcd_ini,f
   898  06D1  2ED0               	goto	u757
   899  06D2  0BF5               	decfsz	??_lcd_ini+1,f
   900  06D3  2ED0               	goto	u757
   901  06D4  2ED5               	nop2
   902                           
   903                           ;LCD_cabecera.h: 62: lcd_cmd(0B00110000);
   904  06D5  3030               	movlw	48
   905  06D6  00F0               	movwf	lcd_cmd@cmd
   906  06D7  3000               	movlw	0
   907  06D8  00F1               	movwf	lcd_cmd@cmd+1
   908  06D9  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   909                           
   910                           ;LCD_cabecera.h: 63: _delay((unsigned long)((5)*(8000000/4000)));
   911  06DE  300D               	movlw	13
   912  06DF  00F5               	movwf	??_lcd_ini+1
   913  06E0  30FB               	movlw	251
   914  06E1  00F4               	movwf	??_lcd_ini
   915  06E2                     u767:	
   916  06E2  0BF4               	decfsz	??_lcd_ini,f
   917  06E3  2EE2               	goto	u767
   918  06E4  0BF5               	decfsz	??_lcd_ini+1,f
   919  06E5  2EE2               	goto	u767
   920  06E6  2EE7               	nop2
   921                           
   922                           ;LCD_cabecera.h: 64: lcd_cmd(0B00110000);
   923  06E7  3030               	movlw	48
   924  06E8  00F0               	movwf	lcd_cmd@cmd
   925  06E9  3000               	movlw	0
   926  06EA  00F1               	movwf	lcd_cmd@cmd+1
   927  06EB  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   928                           
   929                           ;LCD_cabecera.h: 65: _delay((unsigned long)((1)*(8000000/4000)));
   930  06F0  3003               	movlw	3
   931  06F1  00F5               	movwf	??_lcd_ini+1
   932  06F2  3097               	movlw	151
   933  06F3  00F4               	movwf	??_lcd_ini
   934  06F4                     u777:	
   935  06F4  0BF4               	decfsz	??_lcd_ini,f
   936  06F5  2EF4               	goto	u777
   937  06F6  0BF5               	decfsz	??_lcd_ini+1,f
   938  06F7  2EF4               	goto	u777
   939  06F8  2EF9               	nop2
   940                           
   941                           ;LCD_cabecera.h: 66: lcd_cmd(0B00110000);
   942  06F9  3030               	movlw	48
   943  06FA  00F0               	movwf	lcd_cmd@cmd
   944  06FB  3000               	movlw	0
   945  06FC  00F1               	movwf	lcd_cmd@cmd+1
   946  06FD  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   947                           
   948                           ;LCD_cabecera.h: 69: lcd_cmd(0B00101000);
   949  0702  3028               	movlw	40
   950  0703  00F0               	movwf	lcd_cmd@cmd
   951  0704  3000               	movlw	0
   952  0705  00F1               	movwf	lcd_cmd@cmd+1
   953  0706  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   954                           
   955                           ;LCD_cabecera.h: 70: lcd_cmd(0B00001100);
   956  070B  300C               	movlw	12
   957  070C  00F0               	movwf	lcd_cmd@cmd
   958  070D  3000               	movlw	0
   959  070E  00F1               	movwf	lcd_cmd@cmd+1
   960  070F  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   961                           
   962                           ;LCD_cabecera.h: 71: lcd_cmd(0B00000001);
   963  0714  3001               	movlw	1
   964  0715  00F0               	movwf	lcd_cmd@cmd
   965  0716  3000               	movlw	0
   966  0717  00F1               	movwf	lcd_cmd@cmd+1
   967  0718  120A  118A  2577  120A  118A  	fcall	_lcd_cmd
   968                           
   969                           ;LCD_cabecera.h: 73: lcd_cmd(0B00000100);
   970  071D  3004               	movlw	4
   971  071E  00F0               	movwf	lcd_cmd@cmd
   972  071F  3000               	movlw	0
   973  0720  00F1               	movwf	lcd_cmd@cmd+1
   974  0721  120A  118A  2577   	fcall	_lcd_cmd
   975  0724  0008               	return
   976  0725                     __end_of_lcd_ini:	
   977                           
   978                           	psect	text6
   979  0577                     __ptext6:	
   980 ;; *************** function _lcd_cmd *****************
   981 ;; Defined at:
   982 ;;		line 76 in file "LCD_cabecera.h"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  cmd             2    0[COMMON] int 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         2       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0
   999 ;;      Totals:         4       0       0       0       0
  1000 ;;Total ram usage:        4 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_lcd_ini
  1006 ;;		_lcd_pos
  1007 ;;		_lcd_custom
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _lcd_cmd
  1013  0577                     _lcd_cmd:	
  1014                           
  1015                           ;LCD_cabecera.h: 78: RD2=0;
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1019  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0579  1108               	bcf	8,2	;volatile
  1022                           
  1023                           ;LCD_cabecera.h: 79: _delay((unsigned long)((1)*(8000000/4000)));
  1024  057A  3003               	movlw	3
  1025  057B  00F3               	movwf	??_lcd_cmd+1
  1026  057C  3097               	movlw	151
  1027  057D  00F2               	movwf	??_lcd_cmd
  1028  057E                     u787:	
  1029  057E  0BF2               	decfsz	??_lcd_cmd,f
  1030  057F  2D7E               	goto	u787
  1031  0580  0BF3               	decfsz	??_lcd_cmd+1,f
  1032  0581  2D7E               	goto	u787
  1033  0582  2D83               	nop2
  1034                           
  1035                           ;LCD_cabecera.h: 80: PORTD=(PORTD&0X0F)|(cmd&0XF0);
  1036  0583  30F0               	movlw	240
  1037  0584  0570               	andwf	lcd_cmd@cmd,w
  1038  0585  00F2               	movwf	??_lcd_cmd
  1039  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0588  0808               	movf	8,w	;volatile
  1042  0589  390F               	andlw	15
  1043  058A  0472               	iorwf	??_lcd_cmd,w
  1044  058B  0088               	movwf	8	;volatile
  1045                           
  1046                           ;LCD_cabecera.h: 81: ((RD3=1),(RD3=0));
  1047  058C  1588               	bsf	8,3	;volatile
  1048  058D  1188               	bcf	8,3	;volatile
  1049                           
  1050                           ;LCD_cabecera.h: 82: PORTD=(PORTD&0X0F)|((cmd<<4)&0XF0);
  1051  058E  0870               	movf	lcd_cmd@cmd,w
  1052  058F  00F2               	movwf	??_lcd_cmd
  1053  0590  3004               	movlw	4
  1054  0591                     u505:	
  1055  0591  1003               	clrc
  1056  0592  0DF2               	rlf	??_lcd_cmd,f
  1057  0593  3EFF               	addlw	-1
  1058  0594  1D03               	skipz
  1059  0595  2D91               	goto	u505
  1060  0596  30F0               	movlw	240
  1061  0597  0572               	andwf	??_lcd_cmd,w
  1062  0598  00F3               	movwf	??_lcd_cmd+1
  1063  0599  0808               	movf	8,w	;volatile
  1064  059A  390F               	andlw	15
  1065  059B  0473               	iorwf	??_lcd_cmd+1,w
  1066  059C  0088               	movwf	8	;volatile
  1067                           
  1068                           ;LCD_cabecera.h: 83: ((RD3=1),(RD3=0));
  1069  059D  1588               	bsf	8,3	;volatile
  1070  059E  1188               	bcf	8,3	;volatile
  1071  059F  0008               	return
  1072  05A0                     __end_of_lcd_cmd:	
  1073                           
  1074                           	psect	text7
  1075  0551                     __ptext7:	
  1076 ;; *************** function _itoa *****************
  1077 ;; Defined at:
  1078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  buf             1    wreg     PTR unsigned char 
  1081 ;;		 -> centi(3), 
  1082 ;;  val             2    4[BANK0 ] int 
  1083 ;;  base            2    6[BANK0 ] int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1086 ;;		 -> centi(3), 
  1087 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1088 ;;		 -> centi(3), 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      PTR unsigned char 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       4       0       0       0
  1099 ;;      Locals:         0       2       0       0       0
  1100 ;;      Temps:          1       0       0       0       0
  1101 ;;      Totals:         1       6       0       0       0
  1102 ;;Total ram usage:        7 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    2
  1105 ;; This function calls:
  1106 ;;		_utoa
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _itoa
  1114  0551                     _itoa:	
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1118                           ;itoa@buf stored from wreg
  1119  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0553  00A9               	movwf	itoa@buf
  1122  0554  0829               	movf	itoa@buf,w
  1123  0555  00FD               	movwf	??_itoa
  1124  0556  087D               	movf	??_itoa,w
  1125  0557  00A8               	movwf	itoa@cp
  1126  0558  1FA5               	btfss	itoa@val+1,7
  1127  0559  2D6A               	goto	l1032
  1128  055A  302D               	movlw	45
  1129  055B  00FD               	movwf	??_itoa
  1130  055C  0829               	movf	itoa@buf,w
  1131  055D  0084               	movwf	4
  1132  055E  087D               	movf	??_itoa,w
  1133  055F  1383               	bcf	3,7	;select IRP bank0
  1134  0560  0080               	movwf	0
  1135  0561  3001               	movlw	1
  1136  0562  00FD               	movwf	??_itoa
  1137  0563  087D               	movf	??_itoa,w
  1138  0564  07A9               	addwf	itoa@buf,f
  1139  0565  09A4               	comf	itoa@val,f
  1140  0566  09A5               	comf	itoa@val+1,f
  1141  0567  0AA4               	incf	itoa@val,f
  1142  0568  1903               	skipnz
  1143  0569  0AA5               	incf	itoa@val+1,f
  1144  056A                     l1032:	
  1145  056A  0825               	movf	itoa@val+1,w
  1146  056B  00F9               	movwf	utoa@val+1
  1147  056C  0824               	movf	itoa@val,w
  1148  056D  00F8               	movwf	utoa@val
  1149  056E  0827               	movf	itoa@base+1,w
  1150  056F  00FB               	movwf	utoa@base+1
  1151  0570  0826               	movf	itoa@base,w
  1152  0571  00FA               	movwf	utoa@base
  1153  0572  0829               	movf	itoa@buf,w
  1154  0573  120A  118A  2787   	fcall	_utoa
  1155  0576  0008               	return
  1156  0577                     __end_of_itoa:	
  1157                           ;	Return value of _itoa is never used
  1158                           
  1159                           
  1160                           	psect	text8
  1161  0787                     __ptext8:	
  1162 ;; *************** function _utoa *****************
  1163 ;; Defined at:
  1164 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  buf             1    wreg     PTR unsigned char 
  1167 ;;		 -> centi(3), 
  1168 ;;  val             2    8[COMMON] unsigned int 
  1169 ;;  base            2   10[COMMON] int 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1172 ;;		 -> centi(3), 
  1173 ;;  v               2    0[BANK0 ] unsigned int 
  1174 ;;  c               1    2[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      PTR unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         4       0       0       0       0
  1185 ;;      Locals:         0       4       0       0       0
  1186 ;;      Temps:          1       0       0       0       0
  1187 ;;      Totals:         5       4       0       0       0
  1188 ;;Total ram usage:        9 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		___lwdiv
  1193 ;;		___lwmod
  1194 ;; This function is called by:
  1195 ;;		_itoa
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _utoa
  1201  0787                     _utoa:	
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1205                           ;utoa@buf stored from wreg
  1206  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0789  00A3               	movwf	utoa@buf
  1209  078A  0879               	movf	utoa@val+1,w
  1210  078B  00A1               	movwf	utoa@v+1
  1211  078C  0878               	movf	utoa@val,w
  1212  078D  00A0               	movwf	utoa@v
  1213  078E                     l934:	
  1214  078E  087B               	movf	utoa@base+1,w
  1215  078F  00F1               	movwf	___lwdiv@divisor+1
  1216  0790  087A               	movf	utoa@base,w
  1217  0791  00F0               	movwf	___lwdiv@divisor
  1218  0792  0821               	movf	utoa@v+1,w
  1219  0793  00F3               	movwf	___lwdiv@dividend+1
  1220  0794  0820               	movf	utoa@v,w
  1221  0795  00F2               	movwf	___lwdiv@dividend
  1222  0796  120A  118A  2637  120A  118A  	fcall	___lwdiv
  1223  079B  0871               	movf	?___lwdiv+1,w
  1224  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1225  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1226  079E  00A1               	movwf	utoa@v+1
  1227  079F  0870               	movf	?___lwdiv,w
  1228  07A0  00A0               	movwf	utoa@v
  1229  07A1  3001               	movlw	1
  1230  07A2  00FC               	movwf	??_utoa
  1231  07A3  087C               	movf	??_utoa,w
  1232  07A4  07A3               	addwf	utoa@buf,f
  1233  07A5  0820               	movf	utoa@v,w
  1234  07A6  0421               	iorwf	utoa@v+1,w
  1235  07A7  1D03               	btfss	3,2
  1236  07A8  2F8E               	goto	l934
  1237  07A9  0823               	movf	utoa@buf,w
  1238  07AA  0084               	movwf	4
  1239  07AB  1383               	bcf	3,7	;select IRP bank0
  1240  07AC  0180               	clrf	0
  1241  07AD  3001               	movlw	1
  1242  07AE  02A3               	subwf	utoa@buf,f
  1243  07AF                     l944:	
  1244  07AF  087B               	movf	utoa@base+1,w
  1245  07B0  00F1               	movwf	___lwmod@divisor+1
  1246  07B1  087A               	movf	utoa@base,w
  1247  07B2  00F0               	movwf	___lwmod@divisor
  1248  07B3  0879               	movf	utoa@val+1,w
  1249  07B4  00F3               	movwf	___lwmod@dividend+1
  1250  07B5  0878               	movf	utoa@val,w
  1251  07B6  00F2               	movwf	___lwmod@dividend
  1252  07B7  120A  118A  25CA  120A  118A  	fcall	___lwmod
  1253  07BC  0870               	movf	?___lwmod,w
  1254  07BD  00FC               	movwf	??_utoa
  1255  07BE  087C               	movf	??_utoa,w
  1256  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1257  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1258  07C1  00A2               	movwf	utoa@c
  1259  07C2  087B               	movf	utoa@base+1,w
  1260  07C3  00F1               	movwf	___lwdiv@divisor+1
  1261  07C4  087A               	movf	utoa@base,w
  1262  07C5  00F0               	movwf	___lwdiv@divisor
  1263  07C6  0879               	movf	utoa@val+1,w
  1264  07C7  00F3               	movwf	___lwdiv@dividend+1
  1265  07C8  0878               	movf	utoa@val,w
  1266  07C9  00F2               	movwf	___lwdiv@dividend
  1267  07CA  120A  118A  2637  120A  118A  	fcall	___lwdiv
  1268  07CF  0871               	movf	?___lwdiv+1,w
  1269  07D0  00F9               	movwf	utoa@val+1
  1270  07D1  0870               	movf	?___lwdiv,w
  1271  07D2  00F8               	movwf	utoa@val
  1272  07D3  300A               	movlw	10
  1273  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1274  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1275  07D6  0222               	subwf	utoa@c,w
  1276  07D7  1C03               	skipc
  1277  07D8  2FDD               	goto	l439
  1278  07D9  3007               	movlw	7
  1279  07DA  00FC               	movwf	??_utoa
  1280  07DB  087C               	movf	??_utoa,w
  1281  07DC  07A2               	addwf	utoa@c,f
  1282  07DD                     l439:	
  1283  07DD  3030               	movlw	48
  1284  07DE  00FC               	movwf	??_utoa
  1285  07DF  087C               	movf	??_utoa,w
  1286  07E0  07A2               	addwf	utoa@c,f
  1287  07E1  0822               	movf	utoa@c,w
  1288  07E2  00FC               	movwf	??_utoa
  1289  07E3  0823               	movf	utoa@buf,w
  1290  07E4  0084               	movwf	4
  1291  07E5  087C               	movf	??_utoa,w
  1292  07E6  1383               	bcf	3,7	;select IRP bank0
  1293  07E7  0080               	movwf	0
  1294  07E8  3001               	movlw	1
  1295  07E9  02A3               	subwf	utoa@buf,f
  1296  07EA  0878               	movf	utoa@val,w
  1297  07EB  0479               	iorwf	utoa@val+1,w
  1298  07EC  1D03               	btfss	3,2
  1299  07ED  2FAF               	goto	l944
  1300                           
  1301                           ;	Return value of _utoa is never used
  1302  07EE  3001               	movlw	1
  1303  07EF  00FC               	movwf	??_utoa
  1304  07F0  087C               	movf	??_utoa,w
  1305  07F1  07A3               	addwf	utoa@buf,f
  1306  07F2  0008               	return
  1307  07F3                     __end_of_utoa:	
  1308                           
  1309                           	psect	text9
  1310  05CA                     __ptext9:	
  1311 ;; *************** function ___lwmod *****************
  1312 ;; Defined at:
  1313 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  divisor         2    0[COMMON] unsigned int 
  1316 ;;  dividend        2    2[COMMON] unsigned int 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  counter         1    5[COMMON] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2    0[COMMON] unsigned int 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         4       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0
  1330 ;;      Temps:          1       0       0       0       0
  1331 ;;      Totals:         6       0       0       0       0
  1332 ;;Total ram usage:        6 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_utoa
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function ___lwmod
  1343  05CA                     ___lwmod:	
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1347  05CA  0870               	movf	___lwmod@divisor,w
  1348  05CB  0471               	iorwf	___lwmod@divisor+1,w
  1349  05CC  1903               	btfsc	3,2
  1350  05CD  2DF7               	goto	l852
  1351  05CE  01F5               	clrf	___lwmod@counter
  1352  05CF  0AF5               	incf	___lwmod@counter,f
  1353  05D0                     l842:	
  1354  05D0  1BF1               	btfsc	___lwmod@divisor+1,7
  1355  05D1  2DDE               	goto	l844
  1356  05D2  3001               	movlw	1
  1357  05D3                     u455:	
  1358  05D3  1003               	clrc
  1359  05D4  0DF0               	rlf	___lwmod@divisor,f
  1360  05D5  0DF1               	rlf	___lwmod@divisor+1,f
  1361  05D6  3EFF               	addlw	-1
  1362  05D7  1D03               	skipz
  1363  05D8  2DD3               	goto	u455
  1364  05D9  3001               	movlw	1
  1365  05DA  00F4               	movwf	??___lwmod
  1366  05DB  0874               	movf	??___lwmod,w
  1367  05DC  07F5               	addwf	___lwmod@counter,f
  1368  05DD  2DD0               	goto	l842
  1369  05DE                     l844:	
  1370  05DE  0871               	movf	___lwmod@divisor+1,w
  1371  05DF  0273               	subwf	___lwmod@dividend+1,w
  1372  05E0  1D03               	skipz
  1373  05E1  2DE4               	goto	u475
  1374  05E2  0870               	movf	___lwmod@divisor,w
  1375  05E3  0272               	subwf	___lwmod@dividend,w
  1376  05E4                     u475:	
  1377  05E4  1C03               	skipc
  1378  05E5  2DEC               	goto	l848
  1379  05E6  0870               	movf	___lwmod@divisor,w
  1380  05E7  02F2               	subwf	___lwmod@dividend,f
  1381  05E8  0871               	movf	___lwmod@divisor+1,w
  1382  05E9  1C03               	skipc
  1383  05EA  03F3               	decf	___lwmod@dividend+1,f
  1384  05EB  02F3               	subwf	___lwmod@dividend+1,f
  1385  05EC                     l848:	
  1386  05EC  3001               	movlw	1
  1387  05ED                     u485:	
  1388  05ED  1003               	clrc
  1389  05EE  0CF1               	rrf	___lwmod@divisor+1,f
  1390  05EF  0CF0               	rrf	___lwmod@divisor,f
  1391  05F0  3EFF               	addlw	-1
  1392  05F1  1D03               	skipz
  1393  05F2  2DED               	goto	u485
  1394  05F3  3001               	movlw	1
  1395  05F4  02F5               	subwf	___lwmod@counter,f
  1396  05F5  1D03               	btfss	3,2
  1397  05F6  2DDE               	goto	l844
  1398  05F7                     l852:	
  1399  05F7  0873               	movf	___lwmod@dividend+1,w
  1400  05F8  00F1               	movwf	?___lwmod+1
  1401  05F9  0872               	movf	___lwmod@dividend,w
  1402  05FA  00F0               	movwf	?___lwmod
  1403  05FB  0008               	return
  1404  05FC                     __end_of___lwmod:	
  1405                           
  1406                           	psect	text10
  1407  0637                     __ptext10:	
  1408 ;; *************** function ___lwdiv *****************
  1409 ;; Defined at:
  1410 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  divisor         2    0[COMMON] unsigned int 
  1413 ;;  dividend        2    2[COMMON] unsigned int 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  quotient        2    5[COMMON] unsigned int 
  1416 ;;  counter         1    7[COMMON] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2    0[COMMON] unsigned int 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         4       0       0       0       0
  1427 ;;      Locals:         3       0       0       0       0
  1428 ;;      Temps:          1       0       0       0       0
  1429 ;;      Totals:         8       0       0       0       0
  1430 ;;Total ram usage:        8 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_utoa
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function ___lwdiv
  1441  0637                     ___lwdiv:	
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1445  0637  01F5               	clrf	___lwdiv@quotient
  1446  0638  01F6               	clrf	___lwdiv@quotient+1
  1447  0639  0870               	movf	___lwdiv@divisor,w
  1448  063A  0471               	iorwf	___lwdiv@divisor+1,w
  1449  063B  1903               	btfsc	3,2
  1450  063C  2E6E               	goto	l830
  1451  063D  01F7               	clrf	___lwdiv@counter
  1452  063E  0AF7               	incf	___lwdiv@counter,f
  1453  063F                     l818:	
  1454  063F  1BF1               	btfsc	___lwdiv@divisor+1,7
  1455  0640  2E4D               	goto	l820
  1456  0641  3001               	movlw	1
  1457  0642                     u385:	
  1458  0642  1003               	clrc
  1459  0643  0DF0               	rlf	___lwdiv@divisor,f
  1460  0644  0DF1               	rlf	___lwdiv@divisor+1,f
  1461  0645  3EFF               	addlw	-1
  1462  0646  1D03               	skipz
  1463  0647  2E42               	goto	u385
  1464  0648  3001               	movlw	1
  1465  0649  00F4               	movwf	??___lwdiv
  1466  064A  0874               	movf	??___lwdiv,w
  1467  064B  07F7               	addwf	___lwdiv@counter,f
  1468  064C  2E3F               	goto	l818
  1469  064D                     l820:	
  1470  064D  3001               	movlw	1
  1471  064E                     u405:	
  1472  064E  1003               	clrc
  1473  064F  0DF5               	rlf	___lwdiv@quotient,f
  1474  0650  0DF6               	rlf	___lwdiv@quotient+1,f
  1475  0651  3EFF               	addlw	-1
  1476  0652  1D03               	skipz
  1477  0653  2E4E               	goto	u405
  1478  0654  0871               	movf	___lwdiv@divisor+1,w
  1479  0655  0273               	subwf	___lwdiv@dividend+1,w
  1480  0656  1D03               	skipz
  1481  0657  2E5A               	goto	u415
  1482  0658  0870               	movf	___lwdiv@divisor,w
  1483  0659  0272               	subwf	___lwdiv@dividend,w
  1484  065A                     u415:	
  1485  065A  1C03               	skipc
  1486  065B  2E63               	goto	l826
  1487  065C  0870               	movf	___lwdiv@divisor,w
  1488  065D  02F2               	subwf	___lwdiv@dividend,f
  1489  065E  0871               	movf	___lwdiv@divisor+1,w
  1490  065F  1C03               	skipc
  1491  0660  03F3               	decf	___lwdiv@dividend+1,f
  1492  0661  02F3               	subwf	___lwdiv@dividend+1,f
  1493  0662  1475               	bsf	___lwdiv@quotient,0
  1494  0663                     l826:	
  1495  0663  3001               	movlw	1
  1496  0664                     u425:	
  1497  0664  1003               	clrc
  1498  0665  0CF1               	rrf	___lwdiv@divisor+1,f
  1499  0666  0CF0               	rrf	___lwdiv@divisor,f
  1500  0667  3EFF               	addlw	-1
  1501  0668  1D03               	skipz
  1502  0669  2E64               	goto	u425
  1503  066A  3001               	movlw	1
  1504  066B  02F7               	subwf	___lwdiv@counter,f
  1505  066C  1D03               	btfss	3,2
  1506  066D  2E4D               	goto	l820
  1507  066E                     l830:	
  1508  066E  0876               	movf	___lwdiv@quotient+1,w
  1509  066F  00F1               	movwf	?___lwdiv+1
  1510  0670  0875               	movf	___lwdiv@quotient,w
  1511  0671  00F0               	movwf	?___lwdiv
  1512  0672  0008               	return
  1513  0673                     __end_of___lwdiv:	
  1514                           
  1515                           	psect	text11
  1516  05FC                     __ptext11:	
  1517 ;; *************** function _distancia *****************
  1518 ;; Defined at:
  1519 ;;		line 68 in file "Main_Usonico.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          2       0       0       0       0
  1536 ;;      Totals:         2       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		___awdiv
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _distancia
  1549  05FC                     _distancia:	
  1550                           
  1551                           ;Main_Usonico.c: 70: RD1=1;
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _distancia: [wreg+status,2+status,0+pclath+cstack]
  1555  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1556  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1557  05FE  1488               	bsf	8,1	;volatile
  1558                           
  1559                           ;Main_Usonico.c: 71: _delay((unsigned long)((1)*(8000000/4000)));
  1560  05FF  3003               	movlw	3
  1561  0600  00FA               	movwf	??_distancia+1
  1562  0601  3097               	movlw	151
  1563  0602  00F9               	movwf	??_distancia
  1564  0603                     u797:	
  1565  0603  0BF9               	decfsz	??_distancia,f
  1566  0604  2E03               	goto	u797
  1567  0605  0BFA               	decfsz	??_distancia+1,f
  1568  0606  2E03               	goto	u797
  1569  0607  2E08               	nop2
  1570                           
  1571                           ;Main_Usonico.c: 72: RD1=0;
  1572  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1574  060A  1088               	bcf	8,1	;volatile
  1575                           
  1576                           ;Main_Usonico.c: 73: TMR1ON=1;
  1577  060B  1410               	bsf	16,0	;volatile
  1578  060C                     l79:	
  1579                           ;Main_Usonico.c: 74: while(RD0==0);
  1580                           
  1581  060C  1C08               	btfss	8,0	;volatile
  1582  060D  2E0C               	goto	l79
  1583                           
  1584                           ;Main_Usonico.c: 75: TMR1=0;
  1585  060E  018E               	clrf	14	;volatile
  1586  060F  018F               	clrf	15	;volatile
  1587  0610                     l82:	
  1588                           ;Main_Usonico.c: 77: while((RD0==1)&&(TMR1<25000));
  1589                           
  1590  0610  1C08               	btfss	8,0	;volatile
  1591  0611  2E19               	goto	l86
  1592  0612  3061               	movlw	97
  1593  0613  020F               	subwf	15,w	;volatile
  1594  0614  30A8               	movlw	168
  1595  0615  1903               	skipnz
  1596  0616  020E               	subwf	14,w	;volatile
  1597  0617  1C03               	skipc
  1598  0618  2E10               	goto	l82
  1599  0619                     l86:	
  1600                           
  1601                           ;Main_Usonico.c: 78: TMR1ON=0;
  1602  0619  1010               	bcf	16,0	;volatile
  1603                           
  1604                           ;Main_Usonico.c: 79: if(TMR1<25000){
  1605  061A  3061               	movlw	97
  1606  061B  020F               	subwf	15,w	;volatile
  1607  061C  30A8               	movlw	168
  1608  061D  1903               	skipnz
  1609  061E  020E               	subwf	14,w	;volatile
  1610  061F  1803               	skipnc
  1611  0620  0008               	return
  1612                           
  1613                           ;Main_Usonico.c: 80: us=(TMR1H*256)+TMR1L;
  1614  0621  080F               	movf	15,w	;volatile
  1615  0622  00AE               	movwf	_us+1
  1616  0623  080E               	movf	14,w	;volatile
  1617  0624  00AD               	movwf	_us
  1618                           
  1619                           ;Main_Usonico.c: 81: cm=us/58;
  1620  0625  303A               	movlw	58
  1621  0626  00F0               	movwf	___awdiv@divisor
  1622  0627  3000               	movlw	0
  1623  0628  00F1               	movwf	___awdiv@divisor+1
  1624  0629  082E               	movf	_us+1,w
  1625  062A  00F3               	movwf	___awdiv@dividend+1
  1626  062B  082D               	movf	_us,w
  1627  062C  00F2               	movwf	___awdiv@dividend
  1628  062D  120A  118A  2673   	fcall	___awdiv
  1629  0630  0871               	movf	?___awdiv+1,w
  1630  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0633  00B0               	movwf	_cm+1
  1633  0634  0870               	movf	?___awdiv,w
  1634  0635  00AF               	movwf	_cm
  1635  0636  0008               	return
  1636  0637                     __end_of_distancia:	
  1637                           
  1638                           	psect	text12
  1639  0673                     __ptext12:	
  1640 ;; *************** function ___awdiv *****************
  1641 ;; Defined at:
  1642 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  divisor         2    0[COMMON] int 
  1645 ;;  dividend        2    2[COMMON] int 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  quotient        2    7[COMMON] int 
  1648 ;;  sign            1    6[COMMON] unsigned char 
  1649 ;;  counter         1    5[COMMON] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2    0[COMMON] int 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         4       0       0       0       0
  1660 ;;      Locals:         4       0       0       0       0
  1661 ;;      Temps:          1       0       0       0       0
  1662 ;;      Totals:         9       0       0       0       0
  1663 ;;Total ram usage:        9 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_distancia
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function ___awdiv
  1674  0673                     ___awdiv:	
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1678  0673  01F6               	clrf	___awdiv@sign
  1679  0674  1FF1               	btfss	___awdiv@divisor+1,7
  1680  0675  2E7D               	goto	l896
  1681  0676  09F0               	comf	___awdiv@divisor,f
  1682  0677  09F1               	comf	___awdiv@divisor+1,f
  1683  0678  0AF0               	incf	___awdiv@divisor,f
  1684  0679  1903               	skipnz
  1685  067A  0AF1               	incf	___awdiv@divisor+1,f
  1686  067B  01F6               	clrf	___awdiv@sign
  1687  067C  0AF6               	incf	___awdiv@sign,f
  1688  067D                     l896:	
  1689  067D  1FF3               	btfss	___awdiv@dividend+1,7
  1690  067E  2E88               	goto	l902
  1691  067F  09F2               	comf	___awdiv@dividend,f
  1692  0680  09F3               	comf	___awdiv@dividend+1,f
  1693  0681  0AF2               	incf	___awdiv@dividend,f
  1694  0682  1903               	skipnz
  1695  0683  0AF3               	incf	___awdiv@dividend+1,f
  1696  0684  3001               	movlw	1
  1697  0685  00F4               	movwf	??___awdiv
  1698  0686  0874               	movf	??___awdiv,w
  1699  0687  06F6               	xorwf	___awdiv@sign,f
  1700  0688                     l902:	
  1701  0688  01F7               	clrf	___awdiv@quotient
  1702  0689  01F8               	clrf	___awdiv@quotient+1
  1703  068A  0870               	movf	___awdiv@divisor,w
  1704  068B  0471               	iorwf	___awdiv@divisor+1,w
  1705  068C  1903               	btfsc	3,2
  1706  068D  2EBF               	goto	l924
  1707  068E  01F5               	clrf	___awdiv@counter
  1708  068F  0AF5               	incf	___awdiv@counter,f
  1709  0690                     l912:	
  1710  0690  1BF1               	btfsc	___awdiv@divisor+1,7
  1711  0691  2E9E               	goto	l914
  1712  0692  3001               	movlw	1
  1713  0693                     u555:	
  1714  0693  1003               	clrc
  1715  0694  0DF0               	rlf	___awdiv@divisor,f
  1716  0695  0DF1               	rlf	___awdiv@divisor+1,f
  1717  0696  3EFF               	addlw	-1
  1718  0697  1D03               	skipz
  1719  0698  2E93               	goto	u555
  1720  0699  3001               	movlw	1
  1721  069A  00F4               	movwf	??___awdiv
  1722  069B  0874               	movf	??___awdiv,w
  1723  069C  07F5               	addwf	___awdiv@counter,f
  1724  069D  2E90               	goto	l912
  1725  069E                     l914:	
  1726  069E  3001               	movlw	1
  1727  069F                     u575:	
  1728  069F  1003               	clrc
  1729  06A0  0DF7               	rlf	___awdiv@quotient,f
  1730  06A1  0DF8               	rlf	___awdiv@quotient+1,f
  1731  06A2  3EFF               	addlw	-1
  1732  06A3  1D03               	skipz
  1733  06A4  2E9F               	goto	u575
  1734  06A5  0871               	movf	___awdiv@divisor+1,w
  1735  06A6  0273               	subwf	___awdiv@dividend+1,w
  1736  06A7  1D03               	skipz
  1737  06A8  2EAB               	goto	u585
  1738  06A9  0870               	movf	___awdiv@divisor,w
  1739  06AA  0272               	subwf	___awdiv@dividend,w
  1740  06AB                     u585:	
  1741  06AB  1C03               	skipc
  1742  06AC  2EB4               	goto	l920
  1743  06AD  0870               	movf	___awdiv@divisor,w
  1744  06AE  02F2               	subwf	___awdiv@dividend,f
  1745  06AF  0871               	movf	___awdiv@divisor+1,w
  1746  06B0  1C03               	skipc
  1747  06B1  03F3               	decf	___awdiv@dividend+1,f
  1748  06B2  02F3               	subwf	___awdiv@dividend+1,f
  1749  06B3  1477               	bsf	___awdiv@quotient,0
  1750  06B4                     l920:	
  1751  06B4  3001               	movlw	1
  1752  06B5                     u595:	
  1753  06B5  1003               	clrc
  1754  06B6  0CF1               	rrf	___awdiv@divisor+1,f
  1755  06B7  0CF0               	rrf	___awdiv@divisor,f
  1756  06B8  3EFF               	addlw	-1
  1757  06B9  1D03               	skipz
  1758  06BA  2EB5               	goto	u595
  1759  06BB  3001               	movlw	1
  1760  06BC  02F5               	subwf	___awdiv@counter,f
  1761  06BD  1D03               	btfss	3,2
  1762  06BE  2E9E               	goto	l914
  1763  06BF                     l924:	
  1764  06BF  0876               	movf	___awdiv@sign,w
  1765  06C0  1903               	btfsc	3,2
  1766  06C1  2EC7               	goto	l928
  1767  06C2  09F7               	comf	___awdiv@quotient,f
  1768  06C3  09F8               	comf	___awdiv@quotient+1,f
  1769  06C4  0AF7               	incf	___awdiv@quotient,f
  1770  06C5  1903               	skipnz
  1771  06C6  0AF8               	incf	___awdiv@quotient+1,f
  1772  06C7                     l928:	
  1773  06C7  0878               	movf	___awdiv@quotient+1,w
  1774  06C8  00F1               	movwf	?___awdiv+1
  1775  06C9  0877               	movf	___awdiv@quotient,w
  1776  06CA  00F0               	movwf	?___awdiv
  1777  06CB  0008               	return
  1778  06CC                     __end_of___awdiv:	
  1779  007E                     btemp	set	126	;btemp
  1780  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 3
		 -> centi(BANK0[3]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 3
		 -> centi(BANK0[3]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 3
		 -> centi(BANK0[3]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 3
		 -> centi(BANK0[3]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 3
		 -> centi(BANK0[3]), 

    lcd_write_s@st	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[4]), centi(BANK0[3]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _lcd_write_s->_lcd_write_c
    _lcd_pos->_lcd_cmd
    _lcd_ini->_lcd_cmd
    _itoa->_utoa
    _utoa->___lwdiv
    _distancia->___awdiv

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3578
                                             10 BANK0      3     3      0
                          _distancia
                               _itoa
                            _lcd_ini
                            _lcd_pos
                        _lcd_write_s
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_write_s                                          2     0      2     248
                                              3 COMMON     2     0      2
                        _lcd_write_c
 ---------------------------------------------------------------------------------
 (2) _lcd_write_c                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_pos                                              4     0      4     927
                                              4 COMMON     4     0      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     627
                                              4 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     2      2     627
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1370
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _distancia                                            2     2      0     406
                                              9 COMMON     2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _distancia
     ___awdiv
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_ini
     _lcd_cmd
   _lcd_pos
     _lcd_cmd
   _lcd_write_s
     _lcd_write_c
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 28 13:54:31 2018

                       pc 0002               __CFG_CP$OFF 0000                        l82 0610  
                      l86 0619                        l79 060C              ___awdiv@sign 0076  
                      _cm 002F                        _us 002D                        fsr 0004  
            ?_lcd_write_c 0070              ?_lcd_write_s 0073                       l439 07DD  
                     l820 064D                       l902 0688                       l830 066E  
                     l920 06B4                       l912 0690                       l914 069E  
                     l826 0663                       l818 063F                       l842 05D0  
                     l924 06BF                       l844 05DE                       l852 05F7  
                     l934 078E                       l928 06C7                       l848 05EC  
                     l944 07AF                       l896 067D                       l992 051E  
                     l986 052E                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       u405 064E  
                     u415 065A                       u425 0664                       u505 0591  
            __CFG_CPD$OFF 0000                       u515 05BB                       u455 05D3  
                     u385 0642                       u555 0693                       u475 05E4  
                     u485 05ED                       u575 069F                       u585 06AB  
                     u737 0780                       u595 06B5                       u747 05A8  
                     u757 06D0                       u767 06E2                       u777 06F4  
                     u787 057E                       u797 0603                       fsr0 0004  
                     indf 0000              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
             lcd_pos@fila 0074                      l1032 056A                      l1042 0744  
                    STR_1 0013                      STR_2 001D                      _TMR1 000E  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0725  
                    _itoa 0551                      btemp 007E                      _utoa 0787  
           __CFG_BOREN$ON 0000                      start 0000             __CFG_MCLRE$ON 0000  
                   ?_main 0070                     ?_itoa 0024           __end_of___awdiv 06CC  
           __CFG_WDTE$OFF 0000                     ?_utoa 0078           ___awdiv@divisor 0070  
                   _T1CON 0010           __end_of___lwdiv 0673           __end_of___lwmod 05FC  
         ___awdiv@counter 0075                     _TMR1H 000F                     _TMR1L 000E  
                   _PORTD 0008                     _TRISD 0088             __CFG_PWRTE$ON 0000  
         __end_of_lcd_cmd 05A0           __end_of_lcd_ini 0725           __end_of_lcd_pos 052E  
                   _centi 0031                     _setup 04FE                     pclath 000A  
                   utoa@c 0022                     utoa@v 0020                     status 0003  
                   wtemp0 007E           __initialization 07F3              __end_of_main 0787  
            __end_of_itoa 0577              __end_of_utoa 07F3                    ??_main 002A  
                  ??_itoa 007D                    ??_utoa 007C          ___awdiv@dividend 0072  
                  ?_setup 0070                    _OSCCON 008F                    _TMR1ON 0080  
               ??___awdiv 0074                 ??___lwdiv 0074                 ??___lwmod 0074  
        ___awdiv@quotient 0077                 ??_lcd_cmd 0072                 ??_lcd_ini 0074  
               ??_lcd_pos 0078      __size_of_lcd_write_c 002A      __size_of_lcd_write_s 0023  
                  itoa@cp 0028   __end_of__initialization 07FC             lcd_write_c@ch 0072  
           lcd_write_s@st 0073            __pcstackCOMMON 0070             __end_of_setup 050E  
      __size_of_distancia 003B                   ??_setup 0070                __pbssBANK0 002D  
          lcd_pos@columna 0076                __pmaintext 0725                __stringtab 0003  
       __end_of_distancia 0637                   ___awdiv 0673                   ___lwdiv 0637  
                 ___lwmod 05CA                   __ptext1 04FE                   __ptext2 052E  
                 __ptext3 05A0                   __ptext4 050E                   __ptext5 06CC  
                 __ptext6 0577                   __ptext7 0551                   __ptext8 0787  
                 __ptext9 05CA                   _lcd_cmd 0577                   _lcd_ini 06CC  
                 _lcd_pos 050E      end_of_initialization 07FC                   itoa@buf 0029  
                 itoa@val 0024                   utoa@buf 0023                   utoa@val 0078  
              lcd_cmd@cmd 0070             ??_lcd_write_c 0070             ??_lcd_write_s 0075  
     start_initialization 07F3  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
     __end_of_lcd_write_c 05CA       __end_of_lcd_write_s 0551             __pcstackBANK0 0020  
        ___lwdiv@dividend 0072                  ?___awdiv 0070                  ?___lwdiv 0070  
                ?___lwmod 0070                 __pstrings 0003                 _distancia 05FC  
                ?_lcd_cmd 0070                  ?_lcd_ini 0070                  ?_lcd_pos 0074  
        ___lwdiv@quotient 0075            __size_of_setup 0010               _lcd_write_c 05A0  
             _lcd_write_s 052E                ?_distancia 0070               __stringbase 0012  
        __size_of___awdiv 0059          __size_of___lwdiv 003C          __size_of___lwmod 0032  
      __end_of__stringtab 0013          __size_of_lcd_cmd 0029          __size_of_lcd_ini 0059  
        __size_of_lcd_pos 0020           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 0637                  __ptext11 05FC                  __ptext12 0673  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0062             __size_of_itoa 0026  
           __size_of_utoa 006C               ??_distancia 0079                  itoa@base 0026  
        ___lwmod@dividend 0072                 stringcode 000D                  utoa@base 007A  
         ___lwmod@divisor 0070           ___lwmod@counter 0075                  stringdir 000D  
                stringtab 0003  
